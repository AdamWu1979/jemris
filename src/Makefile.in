# Makefile.in generated by automake 1.12 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011 Free Software
# Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

VPATH = @srcdir@
am__make_dryrun = \
  { \
    am__dry=no; \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        echo 'am--echo: ; @echo "AM"  OK' | $(MAKE) -f - 2>/dev/null \
          | grep '^AM OK$$' >/dev/null || am__dry=yes;; \
      *) \
        for am__flg in $$MAKEFLAGS; do \
          case $$am__flg in \
            *=*|--*) ;; \
            *n*) am__dry=yes; break;; \
          esac; \
        done;; \
    esac; \
    test $$am__dry = yes; \
  }
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
bin_PROGRAMS = jemris$(EXEEXT) sanityck$(EXEEXT) $(am__EXEEXT_1)
@MPI_TRUE@am__append_1 = pjemris
@MPI_TRUE@am__append_2 = testmpi.sh
subdir = src
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(srcdir)/config.h.in $(top_srcdir)/config/depcomp
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
@MPI_TRUE@am__EXEEXT_1 = pjemris$(EXEEXT)
am__installdirs = "$(DESTDIR)$(bindir)"
PROGRAMS = $(bin_PROGRAMS)
am__objects_1 = jemris-AnalyticCoil.$(OBJEXT) \
	jemris-AnalyticGradPulse.$(OBJEXT) \
	jemris-AnalyticPulseShape.$(OBJEXT) \
	jemris-AnalyticRFPulse.$(OBJEXT) \
	jemris-AtomicSequence.$(OBJEXT) jemris-Attribute.$(OBJEXT) \
	jemris-BinaryIO.$(OBJEXT) jemris-BiotSavartLoop.$(OBJEXT) \
	jemris-Bloch_McConnell_CV_Model.$(OBJEXT) \
	jemris-Bloch_CV_Model.$(OBJEXT) jemris-Coil.$(OBJEXT) \
	jemris-CoilArray.$(OBJEXT) \
	jemris-CoilPrototypeFactory.$(OBJEXT) \
	jemris-ConcatSequence.$(OBJEXT) \
	jemris-ConstantGradPulse.$(OBJEXT) \
	jemris-DOMTreeErrorReporter.$(OBJEXT) \
	jemris-DelayAtomicSequence.$(OBJEXT) \
	jemris-DynamicVariables.$(OBJEXT) jemris-EmptyPulse.$(OBJEXT) \
	jemris-ExternalCoil.$(OBJEXT) \
	jemris-ExternalGradPulse.$(OBJEXT) \
	jemris-ExternalPulseData.$(OBJEXT) \
	jemris-ExternalRFPulse.$(OBJEXT) \
	jemris-GaussianRFPulse.$(OBJEXT) jemris-GradPulse.$(OBJEXT) \
	jemris-HardRFPulse.$(OBJEXT) jemris-HDF5IO.$(OBJEXT) \
	jemris-IdealCoil.$(OBJEXT) jemris-Microstructure.$(OBJEXT) \
	jemris-MicrostructureBoxes.$(OBJEXT) \
	jemris-MicrostructureCrossingFiber.$(OBJEXT) \
	jemris-MicrostructureKissingFiber.$(OBJEXT) \
	jemris-MicrostructureSingleFiber.$(OBJEXT) \
	jemris-Model.$(OBJEXT) jemris-Module.$(OBJEXT) \
	jemris-ModulePrototypeFactory.$(OBJEXT) \
	jemris-Parameters.$(OBJEXT) jemris-Prototype.$(OBJEXT) \
	jemris-PrototypeFactory.$(OBJEXT) jemris-Pulse.$(OBJEXT) \
	jemris-RFPulse.$(OBJEXT) jemris-RepIter.$(OBJEXT) \
	jemris-MultiPoolSample.$(OBJEXT) jemris-Sample.$(OBJEXT) \
	jemris-SampleReorderShuffle.$(OBJEXT) \
	jemris-SechRFPulse.$(OBJEXT) jemris-Sequence.$(OBJEXT) \
	jemris-SequenceTree.$(OBJEXT) jemris-Signal.$(OBJEXT) \
	jemris-SimpleIO.$(OBJEXT) jemris-Simulator.$(OBJEXT) \
	jemris-SincRFPulse.$(OBJEXT) jemris-SpiralGradPulse.$(OBJEXT) \
	jemris-StrX.$(OBJEXT) jemris-TPOI.$(OBJEXT) \
	jemris-Trajectory.$(OBJEXT) jemris-Trajectory1D.$(OBJEXT) \
	jemris-TrajectoryDiffusion.$(OBJEXT) \
	jemris-TrajectoryInterface.$(OBJEXT) \
	jemris-TrajectoryMotion.$(OBJEXT) \
	jemris-TrajectoryT2s.$(OBJEXT) jemris-TrapGradPulse.$(OBJEXT) \
	jemris-TriangleGradPulse.$(OBJEXT) jemris-TxRxPhase.$(OBJEXT) \
	jemris-World.$(OBJEXT) jemris-XMLIO.$(OBJEXT) \
	jemris-rng.$(OBJEXT) var_array.$(OBJEXT)
am_jemris_OBJECTS = $(am__objects_1) jemris-jemris.$(OBJEXT)
jemris_OBJECTS = $(am_jemris_OBJECTS)
jemris_LDADD = $(LDADD)
jemris_LINK = $(CXXLD) $(jemris_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am__objects_2 = AnalyticCoil.$(OBJEXT) AnalyticGradPulse.$(OBJEXT) \
	AnalyticPulseShape.$(OBJEXT) AnalyticRFPulse.$(OBJEXT) \
	AtomicSequence.$(OBJEXT) Attribute.$(OBJEXT) \
	BinaryIO.$(OBJEXT) BiotSavartLoop.$(OBJEXT) \
	Bloch_McConnell_CV_Model.$(OBJEXT) Bloch_CV_Model.$(OBJEXT) \
	Coil.$(OBJEXT) CoilArray.$(OBJEXT) \
	CoilPrototypeFactory.$(OBJEXT) ConcatSequence.$(OBJEXT) \
	ConstantGradPulse.$(OBJEXT) DOMTreeErrorReporter.$(OBJEXT) \
	DelayAtomicSequence.$(OBJEXT) DynamicVariables.$(OBJEXT) \
	EmptyPulse.$(OBJEXT) ExternalCoil.$(OBJEXT) \
	ExternalGradPulse.$(OBJEXT) ExternalPulseData.$(OBJEXT) \
	ExternalRFPulse.$(OBJEXT) GaussianRFPulse.$(OBJEXT) \
	GradPulse.$(OBJEXT) HardRFPulse.$(OBJEXT) HDF5IO.$(OBJEXT) \
	IdealCoil.$(OBJEXT) Microstructure.$(OBJEXT) \
	MicrostructureBoxes.$(OBJEXT) \
	MicrostructureCrossingFiber.$(OBJEXT) \
	MicrostructureKissingFiber.$(OBJEXT) \
	MicrostructureSingleFiber.$(OBJEXT) Model.$(OBJEXT) \
	Module.$(OBJEXT) ModulePrototypeFactory.$(OBJEXT) \
	Parameters.$(OBJEXT) Prototype.$(OBJEXT) \
	PrototypeFactory.$(OBJEXT) Pulse.$(OBJEXT) RFPulse.$(OBJEXT) \
	RepIter.$(OBJEXT) MultiPoolSample.$(OBJEXT) Sample.$(OBJEXT) \
	SampleReorderShuffle.$(OBJEXT) SechRFPulse.$(OBJEXT) \
	Sequence.$(OBJEXT) SequenceTree.$(OBJEXT) Signal.$(OBJEXT) \
	SimpleIO.$(OBJEXT) Simulator.$(OBJEXT) SincRFPulse.$(OBJEXT) \
	SpiralGradPulse.$(OBJEXT) StrX.$(OBJEXT) TPOI.$(OBJEXT) \
	Trajectory.$(OBJEXT) Trajectory1D.$(OBJEXT) \
	TrajectoryDiffusion.$(OBJEXT) TrajectoryInterface.$(OBJEXT) \
	TrajectoryMotion.$(OBJEXT) TrajectoryT2s.$(OBJEXT) \
	TrapGradPulse.$(OBJEXT) TriangleGradPulse.$(OBJEXT) \
	TxRxPhase.$(OBJEXT) World.$(OBJEXT) XMLIO.$(OBJEXT) \
	rng.$(OBJEXT) var_array.$(OBJEXT)
am_pjemris_OBJECTS = $(am__objects_2) Mpi2Evolution.$(OBJEXT) \
	pjemris.$(OBJEXT)
pjemris_OBJECTS = $(am_pjemris_OBJECTS)
pjemris_LDADD = $(LDADD)
am_sanityck_OBJECTS = $(am__objects_2) sanityck.$(OBJEXT)
sanityck_OBJECTS = $(am_sanityck_OBJECTS)
sanityck_LDADD = $(LDADD)
DEFAULT_INCLUDES = -I.@am__isrc@
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
DIST_SOURCES = $(jemris_SOURCES) $(pjemris_SOURCES) \
	$(sanityck_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
ETAGS = etags
CTAGS = ctags
am__tty_colors_dummy = \
  mgn= red= grn= lgn= blu= brg= std=; \
  am__color_tests=no
am__tty_colors = $(am__tty_colors_dummy)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DOXYGEN = @DOXYGEN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
GREP = @GREP@
HDF5 = @HDF5@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
MPICXX = @MPICXX@
MPIRUN = @MPIRUN@
MPIRUN_PROC_OPT = @MPIRUN_PROC_OPT@
OBJEXT = @OBJEXT@
OPENMP_CXXFLAGS = @OPENMP_CXXFLAGS@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
XSLTPROC = @XSLTPROC@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
TESTS = testsequences.sh testsignals.sh testcoils.sh $(am__append_2)
AM_CXXFLAGS = $(OPENMP_CXXFLAGS)
SOURCES = AnalyticCoil.cpp AnalyticCoil.h AnalyticGradPulse.cpp \
	AnalyticGradPulse.h AnalyticPulseShape.cpp \
	AnalyticPulseShape.h AnalyticRFPulse.cpp AnalyticRFPulse.h \
	AtomicSequence.cpp AtomicSequence.h Attribute.cpp Attribute.h \
	BinaryIO.h BinaryIO.cpp BiotSavartLoop.cpp BiotSavartLoop.h \
	Bloch_McConnell_CV_Model.cpp Bloch_McConnell_CV_Model.h \
	Bloch_CV_Model.cpp Bloch_CV_Model.h Coil.cpp Coil.h \
	CoilArray.cpp CoilArray.h CoilPrototypeFactory.cpp \
	CoilPrototypeFactory.h ConcatSequence.cpp ConcatSequence.h \
	ConstantGradPulse.cpp ConstantGradPulse.h \
	DOMTreeErrorReporter.cpp DOMTreeErrorReporter.h Debug.h \
	Declarations.h DelayAtomicSequence.cpp DelayAtomicSequence.h \
	DynamicVariables.cpp DynamicVariables.h EmptyPulse.cpp \
	EmptyPulse.h ExternalCoil.cpp ExternalCoil.h \
	ExternalGradPulse.cpp ExternalGradPulse.h \
	ExternalPulseData.cpp ExternalPulseData.h ExternalRFPulse.cpp \
	ExternalRFPulse.h GaussianRFPulse.cpp GaussianRFPulse.h \
	GradPulse.cpp GradPulse.h HardRFPulse.cpp HardRFPulse.h \
	HDF5IO.cpp HDF5IO.h IdealCoil.cpp IdealCoil.h \
	Microstructure.cpp Microstructure.h MicrostructureBoxes.cpp \
	MicrostructureBoxes.h MicrostructureCrossingFiber.cpp \
	MicrostructureCrossingFiber.h MicrostructureKissingFiber.cpp \
	MicrostructureKissingFiber.h MicrostructureSingleFiber.cpp \
	MicrostructureSingleFiber.h Model.cpp Model.h Module.cpp \
	Module.h ModulePrototypeFactory.cpp ModulePrototypeFactory.h \
	Parameters.cpp Parameters.h Prototype.cpp Prototype.h \
	PrototypeFactory.cpp PrototypeFactory.h Pulse.cpp Pulse.h \
	RFPulse.cpp RFPulse.h RepIter.cpp RepIter.h \
	MultiPoolSample.cpp MultiPoolSample.h Sample.cpp Sample.h \
	SampleReorderShuffle.cpp SampleReorderShuffle.h \
	SampleReorderStrategyInterface.h SechRFPulse.cpp SechRFPulse.h \
	Sequence.cpp Sequence.h SequenceTree.cpp SequenceTree.h \
	Signal.cpp Signal.h SimpleIO.h SimpleIO.cpp Simulator.cpp \
	Simulator.h SincRFPulse.cpp SincRFPulse.h SpiralGradPulse.cpp \
	SpiralGradPulse.h StrX.cpp StrX.h TPOI.cpp TPOI.h \
	Trajectory.cpp Trajectory.h Trajectory1D.cpp Trajectory1D.h \
	TrajectoryDiffusion.cpp TrajectoryDiffusion.h \
	TrajectoryEmpty.h TrajectoryInterface.cpp \
	TrajectoryInterface.h TrajectoryMotion.cpp TrajectoryMotion.h \
	TrajectoryT2s.cpp TrajectoryT2s.h TrapGradPulse.cpp \
	TrapGradPulse.h TriangleGradPulse.cpp TriangleGradPulse.h \
	TxRxPhase.cpp TxRxPhase.h World.cpp World.h XMLIO.cpp XMLIO.h \
	config.h ginac_functions.h list.h list_c.h rng.cpp rng.h \
	var_array++.h var_array++_cpp.h var_array.c var_array.h

#SampleReorderShuffle.cpp SampleReorderShuffle.h
jemris_SOURCES = $(SOURCES) jemris.cpp
jemris_CXXFLAGS = $(AM_CXXFLAGS) 
sanityck_SOURCES = $(SOURCES) sanityck.cpp
pjemris_SOURCES = $(SOURCES) Mpi2Evolution.cpp Mpi2Evolution.h mpi_Model.h pjemris.cpp
EXTRA_DIST = testsequences.sh testsignals.sh testcoils.sh
do_subst = sed $(do_dlopen) \
	-e 's,[@]MPIRUN[@],$(MPIRUN),g' \
	-e 's,[@]MPIRUN_PROC_OPT[@],$(MPIRUN_PROC_OPT),g'

all: config.h
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .c .cpp .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

config.h: stamp-h1
	@if test ! -f $@; then rm -f stamp-h1; else :; fi
	@if test ! -f $@; then $(MAKE) $(AM_MAKEFLAGS) stamp-h1; else :; fi

stamp-h1: $(srcdir)/config.h.in $(top_builddir)/config.status
	@rm -f stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status src/config.h
$(srcdir)/config.h.in:  $(am__configure_deps) 
	($(am__cd) $(top_srcdir) && $(AUTOHEADER))
	rm -f stamp-h1
	touch $@

distclean-hdr:
	-rm -f config.h stamp-h1
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p; \
	  then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	      echo " $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	      $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' `; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)
jemris$(EXEEXT): $(jemris_OBJECTS) $(jemris_DEPENDENCIES) $(EXTRA_jemris_DEPENDENCIES) 
	@rm -f jemris$(EXEEXT)
	$(jemris_LINK) $(jemris_OBJECTS) $(jemris_LDADD) $(LIBS)
pjemris$(EXEEXT): $(pjemris_OBJECTS) $(pjemris_DEPENDENCIES) $(EXTRA_pjemris_DEPENDENCIES) 
	@rm -f pjemris$(EXEEXT)
	$(CXXLINK) $(pjemris_OBJECTS) $(pjemris_LDADD) $(LIBS)
sanityck$(EXEEXT): $(sanityck_OBJECTS) $(sanityck_DEPENDENCIES) $(EXTRA_sanityck_DEPENDENCIES) 
	@rm -f sanityck$(EXEEXT)
	$(CXXLINK) $(sanityck_OBJECTS) $(sanityck_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/AnalyticCoil.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/AnalyticGradPulse.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/AnalyticPulseShape.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/AnalyticRFPulse.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/AtomicSequence.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Attribute.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/BinaryIO.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/BiotSavartLoop.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Bloch_CV_Model.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Bloch_McConnell_CV_Model.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Coil.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CoilArray.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CoilPrototypeFactory.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ConcatSequence.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ConstantGradPulse.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/DOMTreeErrorReporter.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/DelayAtomicSequence.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/DynamicVariables.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/EmptyPulse.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ExternalCoil.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ExternalGradPulse.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ExternalPulseData.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ExternalRFPulse.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/GaussianRFPulse.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/GradPulse.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/HDF5IO.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/HardRFPulse.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/IdealCoil.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Microstructure.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/MicrostructureBoxes.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/MicrostructureCrossingFiber.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/MicrostructureKissingFiber.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/MicrostructureSingleFiber.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Model.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Module.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ModulePrototypeFactory.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Mpi2Evolution.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/MultiPoolSample.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Parameters.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Prototype.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/PrototypeFactory.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Pulse.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/RFPulse.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/RepIter.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Sample.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SampleReorderShuffle.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SechRFPulse.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Sequence.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SequenceTree.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Signal.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SimpleIO.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Simulator.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SincRFPulse.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SpiralGradPulse.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/StrX.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TPOI.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Trajectory.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Trajectory1D.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TrajectoryDiffusion.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TrajectoryInterface.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TrajectoryMotion.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TrajectoryT2s.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TrapGradPulse.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TriangleGradPulse.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TxRxPhase.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/World.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/XMLIO.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/jemris-AnalyticCoil.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/jemris-AnalyticGradPulse.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/jemris-AnalyticPulseShape.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/jemris-AnalyticRFPulse.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/jemris-AtomicSequence.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/jemris-Attribute.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/jemris-BinaryIO.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/jemris-BiotSavartLoop.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/jemris-Bloch_CV_Model.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/jemris-Bloch_McConnell_CV_Model.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/jemris-Coil.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/jemris-CoilArray.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/jemris-CoilPrototypeFactory.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/jemris-ConcatSequence.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/jemris-ConstantGradPulse.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/jemris-DOMTreeErrorReporter.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/jemris-DelayAtomicSequence.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/jemris-DynamicVariables.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/jemris-EmptyPulse.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/jemris-ExternalCoil.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/jemris-ExternalGradPulse.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/jemris-ExternalPulseData.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/jemris-ExternalRFPulse.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/jemris-GaussianRFPulse.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/jemris-GradPulse.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/jemris-HDF5IO.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/jemris-HardRFPulse.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/jemris-IdealCoil.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/jemris-Microstructure.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/jemris-MicrostructureBoxes.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/jemris-MicrostructureCrossingFiber.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/jemris-MicrostructureKissingFiber.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/jemris-MicrostructureSingleFiber.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/jemris-Model.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/jemris-Module.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/jemris-ModulePrototypeFactory.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/jemris-MultiPoolSample.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/jemris-Parameters.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/jemris-Prototype.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/jemris-PrototypeFactory.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/jemris-Pulse.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/jemris-RFPulse.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/jemris-RepIter.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/jemris-Sample.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/jemris-SampleReorderShuffle.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/jemris-SechRFPulse.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/jemris-Sequence.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/jemris-SequenceTree.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/jemris-Signal.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/jemris-SimpleIO.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/jemris-Simulator.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/jemris-SincRFPulse.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/jemris-SpiralGradPulse.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/jemris-StrX.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/jemris-TPOI.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/jemris-Trajectory.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/jemris-Trajectory1D.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/jemris-TrajectoryDiffusion.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/jemris-TrajectoryInterface.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/jemris-TrajectoryMotion.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/jemris-TrajectoryT2s.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/jemris-TrapGradPulse.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/jemris-TriangleGradPulse.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/jemris-TxRxPhase.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/jemris-World.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/jemris-XMLIO.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/jemris-jemris.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/jemris-rng.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pjemris.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rng.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sanityck.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/var_array.Po@am__quote@

.c.o:
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c $<

.c.obj:
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.cpp.o:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

jemris-AnalyticCoil.o: AnalyticCoil.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-AnalyticCoil.o -MD -MP -MF $(DEPDIR)/jemris-AnalyticCoil.Tpo -c -o jemris-AnalyticCoil.o `test -f 'AnalyticCoil.cpp' || echo '$(srcdir)/'`AnalyticCoil.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-AnalyticCoil.Tpo $(DEPDIR)/jemris-AnalyticCoil.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='AnalyticCoil.cpp' object='jemris-AnalyticCoil.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-AnalyticCoil.o `test -f 'AnalyticCoil.cpp' || echo '$(srcdir)/'`AnalyticCoil.cpp

jemris-AnalyticCoil.obj: AnalyticCoil.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-AnalyticCoil.obj -MD -MP -MF $(DEPDIR)/jemris-AnalyticCoil.Tpo -c -o jemris-AnalyticCoil.obj `if test -f 'AnalyticCoil.cpp'; then $(CYGPATH_W) 'AnalyticCoil.cpp'; else $(CYGPATH_W) '$(srcdir)/AnalyticCoil.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-AnalyticCoil.Tpo $(DEPDIR)/jemris-AnalyticCoil.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='AnalyticCoil.cpp' object='jemris-AnalyticCoil.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-AnalyticCoil.obj `if test -f 'AnalyticCoil.cpp'; then $(CYGPATH_W) 'AnalyticCoil.cpp'; else $(CYGPATH_W) '$(srcdir)/AnalyticCoil.cpp'; fi`

jemris-AnalyticGradPulse.o: AnalyticGradPulse.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-AnalyticGradPulse.o -MD -MP -MF $(DEPDIR)/jemris-AnalyticGradPulse.Tpo -c -o jemris-AnalyticGradPulse.o `test -f 'AnalyticGradPulse.cpp' || echo '$(srcdir)/'`AnalyticGradPulse.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-AnalyticGradPulse.Tpo $(DEPDIR)/jemris-AnalyticGradPulse.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='AnalyticGradPulse.cpp' object='jemris-AnalyticGradPulse.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-AnalyticGradPulse.o `test -f 'AnalyticGradPulse.cpp' || echo '$(srcdir)/'`AnalyticGradPulse.cpp

jemris-AnalyticGradPulse.obj: AnalyticGradPulse.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-AnalyticGradPulse.obj -MD -MP -MF $(DEPDIR)/jemris-AnalyticGradPulse.Tpo -c -o jemris-AnalyticGradPulse.obj `if test -f 'AnalyticGradPulse.cpp'; then $(CYGPATH_W) 'AnalyticGradPulse.cpp'; else $(CYGPATH_W) '$(srcdir)/AnalyticGradPulse.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-AnalyticGradPulse.Tpo $(DEPDIR)/jemris-AnalyticGradPulse.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='AnalyticGradPulse.cpp' object='jemris-AnalyticGradPulse.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-AnalyticGradPulse.obj `if test -f 'AnalyticGradPulse.cpp'; then $(CYGPATH_W) 'AnalyticGradPulse.cpp'; else $(CYGPATH_W) '$(srcdir)/AnalyticGradPulse.cpp'; fi`

jemris-AnalyticPulseShape.o: AnalyticPulseShape.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-AnalyticPulseShape.o -MD -MP -MF $(DEPDIR)/jemris-AnalyticPulseShape.Tpo -c -o jemris-AnalyticPulseShape.o `test -f 'AnalyticPulseShape.cpp' || echo '$(srcdir)/'`AnalyticPulseShape.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-AnalyticPulseShape.Tpo $(DEPDIR)/jemris-AnalyticPulseShape.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='AnalyticPulseShape.cpp' object='jemris-AnalyticPulseShape.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-AnalyticPulseShape.o `test -f 'AnalyticPulseShape.cpp' || echo '$(srcdir)/'`AnalyticPulseShape.cpp

jemris-AnalyticPulseShape.obj: AnalyticPulseShape.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-AnalyticPulseShape.obj -MD -MP -MF $(DEPDIR)/jemris-AnalyticPulseShape.Tpo -c -o jemris-AnalyticPulseShape.obj `if test -f 'AnalyticPulseShape.cpp'; then $(CYGPATH_W) 'AnalyticPulseShape.cpp'; else $(CYGPATH_W) '$(srcdir)/AnalyticPulseShape.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-AnalyticPulseShape.Tpo $(DEPDIR)/jemris-AnalyticPulseShape.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='AnalyticPulseShape.cpp' object='jemris-AnalyticPulseShape.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-AnalyticPulseShape.obj `if test -f 'AnalyticPulseShape.cpp'; then $(CYGPATH_W) 'AnalyticPulseShape.cpp'; else $(CYGPATH_W) '$(srcdir)/AnalyticPulseShape.cpp'; fi`

jemris-AnalyticRFPulse.o: AnalyticRFPulse.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-AnalyticRFPulse.o -MD -MP -MF $(DEPDIR)/jemris-AnalyticRFPulse.Tpo -c -o jemris-AnalyticRFPulse.o `test -f 'AnalyticRFPulse.cpp' || echo '$(srcdir)/'`AnalyticRFPulse.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-AnalyticRFPulse.Tpo $(DEPDIR)/jemris-AnalyticRFPulse.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='AnalyticRFPulse.cpp' object='jemris-AnalyticRFPulse.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-AnalyticRFPulse.o `test -f 'AnalyticRFPulse.cpp' || echo '$(srcdir)/'`AnalyticRFPulse.cpp

jemris-AnalyticRFPulse.obj: AnalyticRFPulse.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-AnalyticRFPulse.obj -MD -MP -MF $(DEPDIR)/jemris-AnalyticRFPulse.Tpo -c -o jemris-AnalyticRFPulse.obj `if test -f 'AnalyticRFPulse.cpp'; then $(CYGPATH_W) 'AnalyticRFPulse.cpp'; else $(CYGPATH_W) '$(srcdir)/AnalyticRFPulse.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-AnalyticRFPulse.Tpo $(DEPDIR)/jemris-AnalyticRFPulse.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='AnalyticRFPulse.cpp' object='jemris-AnalyticRFPulse.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-AnalyticRFPulse.obj `if test -f 'AnalyticRFPulse.cpp'; then $(CYGPATH_W) 'AnalyticRFPulse.cpp'; else $(CYGPATH_W) '$(srcdir)/AnalyticRFPulse.cpp'; fi`

jemris-AtomicSequence.o: AtomicSequence.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-AtomicSequence.o -MD -MP -MF $(DEPDIR)/jemris-AtomicSequence.Tpo -c -o jemris-AtomicSequence.o `test -f 'AtomicSequence.cpp' || echo '$(srcdir)/'`AtomicSequence.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-AtomicSequence.Tpo $(DEPDIR)/jemris-AtomicSequence.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='AtomicSequence.cpp' object='jemris-AtomicSequence.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-AtomicSequence.o `test -f 'AtomicSequence.cpp' || echo '$(srcdir)/'`AtomicSequence.cpp

jemris-AtomicSequence.obj: AtomicSequence.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-AtomicSequence.obj -MD -MP -MF $(DEPDIR)/jemris-AtomicSequence.Tpo -c -o jemris-AtomicSequence.obj `if test -f 'AtomicSequence.cpp'; then $(CYGPATH_W) 'AtomicSequence.cpp'; else $(CYGPATH_W) '$(srcdir)/AtomicSequence.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-AtomicSequence.Tpo $(DEPDIR)/jemris-AtomicSequence.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='AtomicSequence.cpp' object='jemris-AtomicSequence.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-AtomicSequence.obj `if test -f 'AtomicSequence.cpp'; then $(CYGPATH_W) 'AtomicSequence.cpp'; else $(CYGPATH_W) '$(srcdir)/AtomicSequence.cpp'; fi`

jemris-Attribute.o: Attribute.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-Attribute.o -MD -MP -MF $(DEPDIR)/jemris-Attribute.Tpo -c -o jemris-Attribute.o `test -f 'Attribute.cpp' || echo '$(srcdir)/'`Attribute.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-Attribute.Tpo $(DEPDIR)/jemris-Attribute.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Attribute.cpp' object='jemris-Attribute.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-Attribute.o `test -f 'Attribute.cpp' || echo '$(srcdir)/'`Attribute.cpp

jemris-Attribute.obj: Attribute.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-Attribute.obj -MD -MP -MF $(DEPDIR)/jemris-Attribute.Tpo -c -o jemris-Attribute.obj `if test -f 'Attribute.cpp'; then $(CYGPATH_W) 'Attribute.cpp'; else $(CYGPATH_W) '$(srcdir)/Attribute.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-Attribute.Tpo $(DEPDIR)/jemris-Attribute.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Attribute.cpp' object='jemris-Attribute.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-Attribute.obj `if test -f 'Attribute.cpp'; then $(CYGPATH_W) 'Attribute.cpp'; else $(CYGPATH_W) '$(srcdir)/Attribute.cpp'; fi`

jemris-BinaryIO.o: BinaryIO.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-BinaryIO.o -MD -MP -MF $(DEPDIR)/jemris-BinaryIO.Tpo -c -o jemris-BinaryIO.o `test -f 'BinaryIO.cpp' || echo '$(srcdir)/'`BinaryIO.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-BinaryIO.Tpo $(DEPDIR)/jemris-BinaryIO.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='BinaryIO.cpp' object='jemris-BinaryIO.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-BinaryIO.o `test -f 'BinaryIO.cpp' || echo '$(srcdir)/'`BinaryIO.cpp

jemris-BinaryIO.obj: BinaryIO.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-BinaryIO.obj -MD -MP -MF $(DEPDIR)/jemris-BinaryIO.Tpo -c -o jemris-BinaryIO.obj `if test -f 'BinaryIO.cpp'; then $(CYGPATH_W) 'BinaryIO.cpp'; else $(CYGPATH_W) '$(srcdir)/BinaryIO.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-BinaryIO.Tpo $(DEPDIR)/jemris-BinaryIO.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='BinaryIO.cpp' object='jemris-BinaryIO.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-BinaryIO.obj `if test -f 'BinaryIO.cpp'; then $(CYGPATH_W) 'BinaryIO.cpp'; else $(CYGPATH_W) '$(srcdir)/BinaryIO.cpp'; fi`

jemris-BiotSavartLoop.o: BiotSavartLoop.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-BiotSavartLoop.o -MD -MP -MF $(DEPDIR)/jemris-BiotSavartLoop.Tpo -c -o jemris-BiotSavartLoop.o `test -f 'BiotSavartLoop.cpp' || echo '$(srcdir)/'`BiotSavartLoop.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-BiotSavartLoop.Tpo $(DEPDIR)/jemris-BiotSavartLoop.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='BiotSavartLoop.cpp' object='jemris-BiotSavartLoop.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-BiotSavartLoop.o `test -f 'BiotSavartLoop.cpp' || echo '$(srcdir)/'`BiotSavartLoop.cpp

jemris-BiotSavartLoop.obj: BiotSavartLoop.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-BiotSavartLoop.obj -MD -MP -MF $(DEPDIR)/jemris-BiotSavartLoop.Tpo -c -o jemris-BiotSavartLoop.obj `if test -f 'BiotSavartLoop.cpp'; then $(CYGPATH_W) 'BiotSavartLoop.cpp'; else $(CYGPATH_W) '$(srcdir)/BiotSavartLoop.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-BiotSavartLoop.Tpo $(DEPDIR)/jemris-BiotSavartLoop.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='BiotSavartLoop.cpp' object='jemris-BiotSavartLoop.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-BiotSavartLoop.obj `if test -f 'BiotSavartLoop.cpp'; then $(CYGPATH_W) 'BiotSavartLoop.cpp'; else $(CYGPATH_W) '$(srcdir)/BiotSavartLoop.cpp'; fi`

jemris-Bloch_McConnell_CV_Model.o: Bloch_McConnell_CV_Model.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-Bloch_McConnell_CV_Model.o -MD -MP -MF $(DEPDIR)/jemris-Bloch_McConnell_CV_Model.Tpo -c -o jemris-Bloch_McConnell_CV_Model.o `test -f 'Bloch_McConnell_CV_Model.cpp' || echo '$(srcdir)/'`Bloch_McConnell_CV_Model.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-Bloch_McConnell_CV_Model.Tpo $(DEPDIR)/jemris-Bloch_McConnell_CV_Model.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Bloch_McConnell_CV_Model.cpp' object='jemris-Bloch_McConnell_CV_Model.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-Bloch_McConnell_CV_Model.o `test -f 'Bloch_McConnell_CV_Model.cpp' || echo '$(srcdir)/'`Bloch_McConnell_CV_Model.cpp

jemris-Bloch_McConnell_CV_Model.obj: Bloch_McConnell_CV_Model.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-Bloch_McConnell_CV_Model.obj -MD -MP -MF $(DEPDIR)/jemris-Bloch_McConnell_CV_Model.Tpo -c -o jemris-Bloch_McConnell_CV_Model.obj `if test -f 'Bloch_McConnell_CV_Model.cpp'; then $(CYGPATH_W) 'Bloch_McConnell_CV_Model.cpp'; else $(CYGPATH_W) '$(srcdir)/Bloch_McConnell_CV_Model.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-Bloch_McConnell_CV_Model.Tpo $(DEPDIR)/jemris-Bloch_McConnell_CV_Model.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Bloch_McConnell_CV_Model.cpp' object='jemris-Bloch_McConnell_CV_Model.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-Bloch_McConnell_CV_Model.obj `if test -f 'Bloch_McConnell_CV_Model.cpp'; then $(CYGPATH_W) 'Bloch_McConnell_CV_Model.cpp'; else $(CYGPATH_W) '$(srcdir)/Bloch_McConnell_CV_Model.cpp'; fi`

jemris-Bloch_CV_Model.o: Bloch_CV_Model.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-Bloch_CV_Model.o -MD -MP -MF $(DEPDIR)/jemris-Bloch_CV_Model.Tpo -c -o jemris-Bloch_CV_Model.o `test -f 'Bloch_CV_Model.cpp' || echo '$(srcdir)/'`Bloch_CV_Model.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-Bloch_CV_Model.Tpo $(DEPDIR)/jemris-Bloch_CV_Model.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Bloch_CV_Model.cpp' object='jemris-Bloch_CV_Model.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-Bloch_CV_Model.o `test -f 'Bloch_CV_Model.cpp' || echo '$(srcdir)/'`Bloch_CV_Model.cpp

jemris-Bloch_CV_Model.obj: Bloch_CV_Model.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-Bloch_CV_Model.obj -MD -MP -MF $(DEPDIR)/jemris-Bloch_CV_Model.Tpo -c -o jemris-Bloch_CV_Model.obj `if test -f 'Bloch_CV_Model.cpp'; then $(CYGPATH_W) 'Bloch_CV_Model.cpp'; else $(CYGPATH_W) '$(srcdir)/Bloch_CV_Model.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-Bloch_CV_Model.Tpo $(DEPDIR)/jemris-Bloch_CV_Model.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Bloch_CV_Model.cpp' object='jemris-Bloch_CV_Model.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-Bloch_CV_Model.obj `if test -f 'Bloch_CV_Model.cpp'; then $(CYGPATH_W) 'Bloch_CV_Model.cpp'; else $(CYGPATH_W) '$(srcdir)/Bloch_CV_Model.cpp'; fi`

jemris-Coil.o: Coil.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-Coil.o -MD -MP -MF $(DEPDIR)/jemris-Coil.Tpo -c -o jemris-Coil.o `test -f 'Coil.cpp' || echo '$(srcdir)/'`Coil.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-Coil.Tpo $(DEPDIR)/jemris-Coil.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Coil.cpp' object='jemris-Coil.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-Coil.o `test -f 'Coil.cpp' || echo '$(srcdir)/'`Coil.cpp

jemris-Coil.obj: Coil.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-Coil.obj -MD -MP -MF $(DEPDIR)/jemris-Coil.Tpo -c -o jemris-Coil.obj `if test -f 'Coil.cpp'; then $(CYGPATH_W) 'Coil.cpp'; else $(CYGPATH_W) '$(srcdir)/Coil.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-Coil.Tpo $(DEPDIR)/jemris-Coil.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Coil.cpp' object='jemris-Coil.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-Coil.obj `if test -f 'Coil.cpp'; then $(CYGPATH_W) 'Coil.cpp'; else $(CYGPATH_W) '$(srcdir)/Coil.cpp'; fi`

jemris-CoilArray.o: CoilArray.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-CoilArray.o -MD -MP -MF $(DEPDIR)/jemris-CoilArray.Tpo -c -o jemris-CoilArray.o `test -f 'CoilArray.cpp' || echo '$(srcdir)/'`CoilArray.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-CoilArray.Tpo $(DEPDIR)/jemris-CoilArray.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='CoilArray.cpp' object='jemris-CoilArray.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-CoilArray.o `test -f 'CoilArray.cpp' || echo '$(srcdir)/'`CoilArray.cpp

jemris-CoilArray.obj: CoilArray.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-CoilArray.obj -MD -MP -MF $(DEPDIR)/jemris-CoilArray.Tpo -c -o jemris-CoilArray.obj `if test -f 'CoilArray.cpp'; then $(CYGPATH_W) 'CoilArray.cpp'; else $(CYGPATH_W) '$(srcdir)/CoilArray.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-CoilArray.Tpo $(DEPDIR)/jemris-CoilArray.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='CoilArray.cpp' object='jemris-CoilArray.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-CoilArray.obj `if test -f 'CoilArray.cpp'; then $(CYGPATH_W) 'CoilArray.cpp'; else $(CYGPATH_W) '$(srcdir)/CoilArray.cpp'; fi`

jemris-CoilPrototypeFactory.o: CoilPrototypeFactory.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-CoilPrototypeFactory.o -MD -MP -MF $(DEPDIR)/jemris-CoilPrototypeFactory.Tpo -c -o jemris-CoilPrototypeFactory.o `test -f 'CoilPrototypeFactory.cpp' || echo '$(srcdir)/'`CoilPrototypeFactory.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-CoilPrototypeFactory.Tpo $(DEPDIR)/jemris-CoilPrototypeFactory.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='CoilPrototypeFactory.cpp' object='jemris-CoilPrototypeFactory.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-CoilPrototypeFactory.o `test -f 'CoilPrototypeFactory.cpp' || echo '$(srcdir)/'`CoilPrototypeFactory.cpp

jemris-CoilPrototypeFactory.obj: CoilPrototypeFactory.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-CoilPrototypeFactory.obj -MD -MP -MF $(DEPDIR)/jemris-CoilPrototypeFactory.Tpo -c -o jemris-CoilPrototypeFactory.obj `if test -f 'CoilPrototypeFactory.cpp'; then $(CYGPATH_W) 'CoilPrototypeFactory.cpp'; else $(CYGPATH_W) '$(srcdir)/CoilPrototypeFactory.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-CoilPrototypeFactory.Tpo $(DEPDIR)/jemris-CoilPrototypeFactory.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='CoilPrototypeFactory.cpp' object='jemris-CoilPrototypeFactory.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-CoilPrototypeFactory.obj `if test -f 'CoilPrototypeFactory.cpp'; then $(CYGPATH_W) 'CoilPrototypeFactory.cpp'; else $(CYGPATH_W) '$(srcdir)/CoilPrototypeFactory.cpp'; fi`

jemris-ConcatSequence.o: ConcatSequence.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-ConcatSequence.o -MD -MP -MF $(DEPDIR)/jemris-ConcatSequence.Tpo -c -o jemris-ConcatSequence.o `test -f 'ConcatSequence.cpp' || echo '$(srcdir)/'`ConcatSequence.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-ConcatSequence.Tpo $(DEPDIR)/jemris-ConcatSequence.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ConcatSequence.cpp' object='jemris-ConcatSequence.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-ConcatSequence.o `test -f 'ConcatSequence.cpp' || echo '$(srcdir)/'`ConcatSequence.cpp

jemris-ConcatSequence.obj: ConcatSequence.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-ConcatSequence.obj -MD -MP -MF $(DEPDIR)/jemris-ConcatSequence.Tpo -c -o jemris-ConcatSequence.obj `if test -f 'ConcatSequence.cpp'; then $(CYGPATH_W) 'ConcatSequence.cpp'; else $(CYGPATH_W) '$(srcdir)/ConcatSequence.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-ConcatSequence.Tpo $(DEPDIR)/jemris-ConcatSequence.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ConcatSequence.cpp' object='jemris-ConcatSequence.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-ConcatSequence.obj `if test -f 'ConcatSequence.cpp'; then $(CYGPATH_W) 'ConcatSequence.cpp'; else $(CYGPATH_W) '$(srcdir)/ConcatSequence.cpp'; fi`

jemris-ConstantGradPulse.o: ConstantGradPulse.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-ConstantGradPulse.o -MD -MP -MF $(DEPDIR)/jemris-ConstantGradPulse.Tpo -c -o jemris-ConstantGradPulse.o `test -f 'ConstantGradPulse.cpp' || echo '$(srcdir)/'`ConstantGradPulse.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-ConstantGradPulse.Tpo $(DEPDIR)/jemris-ConstantGradPulse.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ConstantGradPulse.cpp' object='jemris-ConstantGradPulse.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-ConstantGradPulse.o `test -f 'ConstantGradPulse.cpp' || echo '$(srcdir)/'`ConstantGradPulse.cpp

jemris-ConstantGradPulse.obj: ConstantGradPulse.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-ConstantGradPulse.obj -MD -MP -MF $(DEPDIR)/jemris-ConstantGradPulse.Tpo -c -o jemris-ConstantGradPulse.obj `if test -f 'ConstantGradPulse.cpp'; then $(CYGPATH_W) 'ConstantGradPulse.cpp'; else $(CYGPATH_W) '$(srcdir)/ConstantGradPulse.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-ConstantGradPulse.Tpo $(DEPDIR)/jemris-ConstantGradPulse.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ConstantGradPulse.cpp' object='jemris-ConstantGradPulse.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-ConstantGradPulse.obj `if test -f 'ConstantGradPulse.cpp'; then $(CYGPATH_W) 'ConstantGradPulse.cpp'; else $(CYGPATH_W) '$(srcdir)/ConstantGradPulse.cpp'; fi`

jemris-DOMTreeErrorReporter.o: DOMTreeErrorReporter.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-DOMTreeErrorReporter.o -MD -MP -MF $(DEPDIR)/jemris-DOMTreeErrorReporter.Tpo -c -o jemris-DOMTreeErrorReporter.o `test -f 'DOMTreeErrorReporter.cpp' || echo '$(srcdir)/'`DOMTreeErrorReporter.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-DOMTreeErrorReporter.Tpo $(DEPDIR)/jemris-DOMTreeErrorReporter.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='DOMTreeErrorReporter.cpp' object='jemris-DOMTreeErrorReporter.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-DOMTreeErrorReporter.o `test -f 'DOMTreeErrorReporter.cpp' || echo '$(srcdir)/'`DOMTreeErrorReporter.cpp

jemris-DOMTreeErrorReporter.obj: DOMTreeErrorReporter.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-DOMTreeErrorReporter.obj -MD -MP -MF $(DEPDIR)/jemris-DOMTreeErrorReporter.Tpo -c -o jemris-DOMTreeErrorReporter.obj `if test -f 'DOMTreeErrorReporter.cpp'; then $(CYGPATH_W) 'DOMTreeErrorReporter.cpp'; else $(CYGPATH_W) '$(srcdir)/DOMTreeErrorReporter.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-DOMTreeErrorReporter.Tpo $(DEPDIR)/jemris-DOMTreeErrorReporter.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='DOMTreeErrorReporter.cpp' object='jemris-DOMTreeErrorReporter.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-DOMTreeErrorReporter.obj `if test -f 'DOMTreeErrorReporter.cpp'; then $(CYGPATH_W) 'DOMTreeErrorReporter.cpp'; else $(CYGPATH_W) '$(srcdir)/DOMTreeErrorReporter.cpp'; fi`

jemris-DelayAtomicSequence.o: DelayAtomicSequence.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-DelayAtomicSequence.o -MD -MP -MF $(DEPDIR)/jemris-DelayAtomicSequence.Tpo -c -o jemris-DelayAtomicSequence.o `test -f 'DelayAtomicSequence.cpp' || echo '$(srcdir)/'`DelayAtomicSequence.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-DelayAtomicSequence.Tpo $(DEPDIR)/jemris-DelayAtomicSequence.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='DelayAtomicSequence.cpp' object='jemris-DelayAtomicSequence.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-DelayAtomicSequence.o `test -f 'DelayAtomicSequence.cpp' || echo '$(srcdir)/'`DelayAtomicSequence.cpp

jemris-DelayAtomicSequence.obj: DelayAtomicSequence.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-DelayAtomicSequence.obj -MD -MP -MF $(DEPDIR)/jemris-DelayAtomicSequence.Tpo -c -o jemris-DelayAtomicSequence.obj `if test -f 'DelayAtomicSequence.cpp'; then $(CYGPATH_W) 'DelayAtomicSequence.cpp'; else $(CYGPATH_W) '$(srcdir)/DelayAtomicSequence.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-DelayAtomicSequence.Tpo $(DEPDIR)/jemris-DelayAtomicSequence.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='DelayAtomicSequence.cpp' object='jemris-DelayAtomicSequence.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-DelayAtomicSequence.obj `if test -f 'DelayAtomicSequence.cpp'; then $(CYGPATH_W) 'DelayAtomicSequence.cpp'; else $(CYGPATH_W) '$(srcdir)/DelayAtomicSequence.cpp'; fi`

jemris-DynamicVariables.o: DynamicVariables.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-DynamicVariables.o -MD -MP -MF $(DEPDIR)/jemris-DynamicVariables.Tpo -c -o jemris-DynamicVariables.o `test -f 'DynamicVariables.cpp' || echo '$(srcdir)/'`DynamicVariables.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-DynamicVariables.Tpo $(DEPDIR)/jemris-DynamicVariables.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='DynamicVariables.cpp' object='jemris-DynamicVariables.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-DynamicVariables.o `test -f 'DynamicVariables.cpp' || echo '$(srcdir)/'`DynamicVariables.cpp

jemris-DynamicVariables.obj: DynamicVariables.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-DynamicVariables.obj -MD -MP -MF $(DEPDIR)/jemris-DynamicVariables.Tpo -c -o jemris-DynamicVariables.obj `if test -f 'DynamicVariables.cpp'; then $(CYGPATH_W) 'DynamicVariables.cpp'; else $(CYGPATH_W) '$(srcdir)/DynamicVariables.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-DynamicVariables.Tpo $(DEPDIR)/jemris-DynamicVariables.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='DynamicVariables.cpp' object='jemris-DynamicVariables.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-DynamicVariables.obj `if test -f 'DynamicVariables.cpp'; then $(CYGPATH_W) 'DynamicVariables.cpp'; else $(CYGPATH_W) '$(srcdir)/DynamicVariables.cpp'; fi`

jemris-EmptyPulse.o: EmptyPulse.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-EmptyPulse.o -MD -MP -MF $(DEPDIR)/jemris-EmptyPulse.Tpo -c -o jemris-EmptyPulse.o `test -f 'EmptyPulse.cpp' || echo '$(srcdir)/'`EmptyPulse.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-EmptyPulse.Tpo $(DEPDIR)/jemris-EmptyPulse.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='EmptyPulse.cpp' object='jemris-EmptyPulse.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-EmptyPulse.o `test -f 'EmptyPulse.cpp' || echo '$(srcdir)/'`EmptyPulse.cpp

jemris-EmptyPulse.obj: EmptyPulse.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-EmptyPulse.obj -MD -MP -MF $(DEPDIR)/jemris-EmptyPulse.Tpo -c -o jemris-EmptyPulse.obj `if test -f 'EmptyPulse.cpp'; then $(CYGPATH_W) 'EmptyPulse.cpp'; else $(CYGPATH_W) '$(srcdir)/EmptyPulse.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-EmptyPulse.Tpo $(DEPDIR)/jemris-EmptyPulse.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='EmptyPulse.cpp' object='jemris-EmptyPulse.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-EmptyPulse.obj `if test -f 'EmptyPulse.cpp'; then $(CYGPATH_W) 'EmptyPulse.cpp'; else $(CYGPATH_W) '$(srcdir)/EmptyPulse.cpp'; fi`

jemris-ExternalCoil.o: ExternalCoil.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-ExternalCoil.o -MD -MP -MF $(DEPDIR)/jemris-ExternalCoil.Tpo -c -o jemris-ExternalCoil.o `test -f 'ExternalCoil.cpp' || echo '$(srcdir)/'`ExternalCoil.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-ExternalCoil.Tpo $(DEPDIR)/jemris-ExternalCoil.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ExternalCoil.cpp' object='jemris-ExternalCoil.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-ExternalCoil.o `test -f 'ExternalCoil.cpp' || echo '$(srcdir)/'`ExternalCoil.cpp

jemris-ExternalCoil.obj: ExternalCoil.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-ExternalCoil.obj -MD -MP -MF $(DEPDIR)/jemris-ExternalCoil.Tpo -c -o jemris-ExternalCoil.obj `if test -f 'ExternalCoil.cpp'; then $(CYGPATH_W) 'ExternalCoil.cpp'; else $(CYGPATH_W) '$(srcdir)/ExternalCoil.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-ExternalCoil.Tpo $(DEPDIR)/jemris-ExternalCoil.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ExternalCoil.cpp' object='jemris-ExternalCoil.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-ExternalCoil.obj `if test -f 'ExternalCoil.cpp'; then $(CYGPATH_W) 'ExternalCoil.cpp'; else $(CYGPATH_W) '$(srcdir)/ExternalCoil.cpp'; fi`

jemris-ExternalGradPulse.o: ExternalGradPulse.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-ExternalGradPulse.o -MD -MP -MF $(DEPDIR)/jemris-ExternalGradPulse.Tpo -c -o jemris-ExternalGradPulse.o `test -f 'ExternalGradPulse.cpp' || echo '$(srcdir)/'`ExternalGradPulse.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-ExternalGradPulse.Tpo $(DEPDIR)/jemris-ExternalGradPulse.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ExternalGradPulse.cpp' object='jemris-ExternalGradPulse.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-ExternalGradPulse.o `test -f 'ExternalGradPulse.cpp' || echo '$(srcdir)/'`ExternalGradPulse.cpp

jemris-ExternalGradPulse.obj: ExternalGradPulse.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-ExternalGradPulse.obj -MD -MP -MF $(DEPDIR)/jemris-ExternalGradPulse.Tpo -c -o jemris-ExternalGradPulse.obj `if test -f 'ExternalGradPulse.cpp'; then $(CYGPATH_W) 'ExternalGradPulse.cpp'; else $(CYGPATH_W) '$(srcdir)/ExternalGradPulse.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-ExternalGradPulse.Tpo $(DEPDIR)/jemris-ExternalGradPulse.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ExternalGradPulse.cpp' object='jemris-ExternalGradPulse.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-ExternalGradPulse.obj `if test -f 'ExternalGradPulse.cpp'; then $(CYGPATH_W) 'ExternalGradPulse.cpp'; else $(CYGPATH_W) '$(srcdir)/ExternalGradPulse.cpp'; fi`

jemris-ExternalPulseData.o: ExternalPulseData.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-ExternalPulseData.o -MD -MP -MF $(DEPDIR)/jemris-ExternalPulseData.Tpo -c -o jemris-ExternalPulseData.o `test -f 'ExternalPulseData.cpp' || echo '$(srcdir)/'`ExternalPulseData.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-ExternalPulseData.Tpo $(DEPDIR)/jemris-ExternalPulseData.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ExternalPulseData.cpp' object='jemris-ExternalPulseData.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-ExternalPulseData.o `test -f 'ExternalPulseData.cpp' || echo '$(srcdir)/'`ExternalPulseData.cpp

jemris-ExternalPulseData.obj: ExternalPulseData.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-ExternalPulseData.obj -MD -MP -MF $(DEPDIR)/jemris-ExternalPulseData.Tpo -c -o jemris-ExternalPulseData.obj `if test -f 'ExternalPulseData.cpp'; then $(CYGPATH_W) 'ExternalPulseData.cpp'; else $(CYGPATH_W) '$(srcdir)/ExternalPulseData.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-ExternalPulseData.Tpo $(DEPDIR)/jemris-ExternalPulseData.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ExternalPulseData.cpp' object='jemris-ExternalPulseData.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-ExternalPulseData.obj `if test -f 'ExternalPulseData.cpp'; then $(CYGPATH_W) 'ExternalPulseData.cpp'; else $(CYGPATH_W) '$(srcdir)/ExternalPulseData.cpp'; fi`

jemris-ExternalRFPulse.o: ExternalRFPulse.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-ExternalRFPulse.o -MD -MP -MF $(DEPDIR)/jemris-ExternalRFPulse.Tpo -c -o jemris-ExternalRFPulse.o `test -f 'ExternalRFPulse.cpp' || echo '$(srcdir)/'`ExternalRFPulse.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-ExternalRFPulse.Tpo $(DEPDIR)/jemris-ExternalRFPulse.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ExternalRFPulse.cpp' object='jemris-ExternalRFPulse.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-ExternalRFPulse.o `test -f 'ExternalRFPulse.cpp' || echo '$(srcdir)/'`ExternalRFPulse.cpp

jemris-ExternalRFPulse.obj: ExternalRFPulse.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-ExternalRFPulse.obj -MD -MP -MF $(DEPDIR)/jemris-ExternalRFPulse.Tpo -c -o jemris-ExternalRFPulse.obj `if test -f 'ExternalRFPulse.cpp'; then $(CYGPATH_W) 'ExternalRFPulse.cpp'; else $(CYGPATH_W) '$(srcdir)/ExternalRFPulse.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-ExternalRFPulse.Tpo $(DEPDIR)/jemris-ExternalRFPulse.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ExternalRFPulse.cpp' object='jemris-ExternalRFPulse.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-ExternalRFPulse.obj `if test -f 'ExternalRFPulse.cpp'; then $(CYGPATH_W) 'ExternalRFPulse.cpp'; else $(CYGPATH_W) '$(srcdir)/ExternalRFPulse.cpp'; fi`

jemris-GaussianRFPulse.o: GaussianRFPulse.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-GaussianRFPulse.o -MD -MP -MF $(DEPDIR)/jemris-GaussianRFPulse.Tpo -c -o jemris-GaussianRFPulse.o `test -f 'GaussianRFPulse.cpp' || echo '$(srcdir)/'`GaussianRFPulse.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-GaussianRFPulse.Tpo $(DEPDIR)/jemris-GaussianRFPulse.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='GaussianRFPulse.cpp' object='jemris-GaussianRFPulse.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-GaussianRFPulse.o `test -f 'GaussianRFPulse.cpp' || echo '$(srcdir)/'`GaussianRFPulse.cpp

jemris-GaussianRFPulse.obj: GaussianRFPulse.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-GaussianRFPulse.obj -MD -MP -MF $(DEPDIR)/jemris-GaussianRFPulse.Tpo -c -o jemris-GaussianRFPulse.obj `if test -f 'GaussianRFPulse.cpp'; then $(CYGPATH_W) 'GaussianRFPulse.cpp'; else $(CYGPATH_W) '$(srcdir)/GaussianRFPulse.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-GaussianRFPulse.Tpo $(DEPDIR)/jemris-GaussianRFPulse.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='GaussianRFPulse.cpp' object='jemris-GaussianRFPulse.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-GaussianRFPulse.obj `if test -f 'GaussianRFPulse.cpp'; then $(CYGPATH_W) 'GaussianRFPulse.cpp'; else $(CYGPATH_W) '$(srcdir)/GaussianRFPulse.cpp'; fi`

jemris-GradPulse.o: GradPulse.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-GradPulse.o -MD -MP -MF $(DEPDIR)/jemris-GradPulse.Tpo -c -o jemris-GradPulse.o `test -f 'GradPulse.cpp' || echo '$(srcdir)/'`GradPulse.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-GradPulse.Tpo $(DEPDIR)/jemris-GradPulse.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='GradPulse.cpp' object='jemris-GradPulse.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-GradPulse.o `test -f 'GradPulse.cpp' || echo '$(srcdir)/'`GradPulse.cpp

jemris-GradPulse.obj: GradPulse.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-GradPulse.obj -MD -MP -MF $(DEPDIR)/jemris-GradPulse.Tpo -c -o jemris-GradPulse.obj `if test -f 'GradPulse.cpp'; then $(CYGPATH_W) 'GradPulse.cpp'; else $(CYGPATH_W) '$(srcdir)/GradPulse.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-GradPulse.Tpo $(DEPDIR)/jemris-GradPulse.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='GradPulse.cpp' object='jemris-GradPulse.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-GradPulse.obj `if test -f 'GradPulse.cpp'; then $(CYGPATH_W) 'GradPulse.cpp'; else $(CYGPATH_W) '$(srcdir)/GradPulse.cpp'; fi`

jemris-HardRFPulse.o: HardRFPulse.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-HardRFPulse.o -MD -MP -MF $(DEPDIR)/jemris-HardRFPulse.Tpo -c -o jemris-HardRFPulse.o `test -f 'HardRFPulse.cpp' || echo '$(srcdir)/'`HardRFPulse.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-HardRFPulse.Tpo $(DEPDIR)/jemris-HardRFPulse.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='HardRFPulse.cpp' object='jemris-HardRFPulse.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-HardRFPulse.o `test -f 'HardRFPulse.cpp' || echo '$(srcdir)/'`HardRFPulse.cpp

jemris-HardRFPulse.obj: HardRFPulse.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-HardRFPulse.obj -MD -MP -MF $(DEPDIR)/jemris-HardRFPulse.Tpo -c -o jemris-HardRFPulse.obj `if test -f 'HardRFPulse.cpp'; then $(CYGPATH_W) 'HardRFPulse.cpp'; else $(CYGPATH_W) '$(srcdir)/HardRFPulse.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-HardRFPulse.Tpo $(DEPDIR)/jemris-HardRFPulse.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='HardRFPulse.cpp' object='jemris-HardRFPulse.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-HardRFPulse.obj `if test -f 'HardRFPulse.cpp'; then $(CYGPATH_W) 'HardRFPulse.cpp'; else $(CYGPATH_W) '$(srcdir)/HardRFPulse.cpp'; fi`

jemris-HDF5IO.o: HDF5IO.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-HDF5IO.o -MD -MP -MF $(DEPDIR)/jemris-HDF5IO.Tpo -c -o jemris-HDF5IO.o `test -f 'HDF5IO.cpp' || echo '$(srcdir)/'`HDF5IO.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-HDF5IO.Tpo $(DEPDIR)/jemris-HDF5IO.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='HDF5IO.cpp' object='jemris-HDF5IO.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-HDF5IO.o `test -f 'HDF5IO.cpp' || echo '$(srcdir)/'`HDF5IO.cpp

jemris-HDF5IO.obj: HDF5IO.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-HDF5IO.obj -MD -MP -MF $(DEPDIR)/jemris-HDF5IO.Tpo -c -o jemris-HDF5IO.obj `if test -f 'HDF5IO.cpp'; then $(CYGPATH_W) 'HDF5IO.cpp'; else $(CYGPATH_W) '$(srcdir)/HDF5IO.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-HDF5IO.Tpo $(DEPDIR)/jemris-HDF5IO.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='HDF5IO.cpp' object='jemris-HDF5IO.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-HDF5IO.obj `if test -f 'HDF5IO.cpp'; then $(CYGPATH_W) 'HDF5IO.cpp'; else $(CYGPATH_W) '$(srcdir)/HDF5IO.cpp'; fi`

jemris-IdealCoil.o: IdealCoil.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-IdealCoil.o -MD -MP -MF $(DEPDIR)/jemris-IdealCoil.Tpo -c -o jemris-IdealCoil.o `test -f 'IdealCoil.cpp' || echo '$(srcdir)/'`IdealCoil.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-IdealCoil.Tpo $(DEPDIR)/jemris-IdealCoil.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='IdealCoil.cpp' object='jemris-IdealCoil.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-IdealCoil.o `test -f 'IdealCoil.cpp' || echo '$(srcdir)/'`IdealCoil.cpp

jemris-IdealCoil.obj: IdealCoil.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-IdealCoil.obj -MD -MP -MF $(DEPDIR)/jemris-IdealCoil.Tpo -c -o jemris-IdealCoil.obj `if test -f 'IdealCoil.cpp'; then $(CYGPATH_W) 'IdealCoil.cpp'; else $(CYGPATH_W) '$(srcdir)/IdealCoil.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-IdealCoil.Tpo $(DEPDIR)/jemris-IdealCoil.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='IdealCoil.cpp' object='jemris-IdealCoil.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-IdealCoil.obj `if test -f 'IdealCoil.cpp'; then $(CYGPATH_W) 'IdealCoil.cpp'; else $(CYGPATH_W) '$(srcdir)/IdealCoil.cpp'; fi`

jemris-Microstructure.o: Microstructure.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-Microstructure.o -MD -MP -MF $(DEPDIR)/jemris-Microstructure.Tpo -c -o jemris-Microstructure.o `test -f 'Microstructure.cpp' || echo '$(srcdir)/'`Microstructure.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-Microstructure.Tpo $(DEPDIR)/jemris-Microstructure.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Microstructure.cpp' object='jemris-Microstructure.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-Microstructure.o `test -f 'Microstructure.cpp' || echo '$(srcdir)/'`Microstructure.cpp

jemris-Microstructure.obj: Microstructure.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-Microstructure.obj -MD -MP -MF $(DEPDIR)/jemris-Microstructure.Tpo -c -o jemris-Microstructure.obj `if test -f 'Microstructure.cpp'; then $(CYGPATH_W) 'Microstructure.cpp'; else $(CYGPATH_W) '$(srcdir)/Microstructure.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-Microstructure.Tpo $(DEPDIR)/jemris-Microstructure.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Microstructure.cpp' object='jemris-Microstructure.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-Microstructure.obj `if test -f 'Microstructure.cpp'; then $(CYGPATH_W) 'Microstructure.cpp'; else $(CYGPATH_W) '$(srcdir)/Microstructure.cpp'; fi`

jemris-MicrostructureBoxes.o: MicrostructureBoxes.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-MicrostructureBoxes.o -MD -MP -MF $(DEPDIR)/jemris-MicrostructureBoxes.Tpo -c -o jemris-MicrostructureBoxes.o `test -f 'MicrostructureBoxes.cpp' || echo '$(srcdir)/'`MicrostructureBoxes.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-MicrostructureBoxes.Tpo $(DEPDIR)/jemris-MicrostructureBoxes.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='MicrostructureBoxes.cpp' object='jemris-MicrostructureBoxes.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-MicrostructureBoxes.o `test -f 'MicrostructureBoxes.cpp' || echo '$(srcdir)/'`MicrostructureBoxes.cpp

jemris-MicrostructureBoxes.obj: MicrostructureBoxes.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-MicrostructureBoxes.obj -MD -MP -MF $(DEPDIR)/jemris-MicrostructureBoxes.Tpo -c -o jemris-MicrostructureBoxes.obj `if test -f 'MicrostructureBoxes.cpp'; then $(CYGPATH_W) 'MicrostructureBoxes.cpp'; else $(CYGPATH_W) '$(srcdir)/MicrostructureBoxes.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-MicrostructureBoxes.Tpo $(DEPDIR)/jemris-MicrostructureBoxes.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='MicrostructureBoxes.cpp' object='jemris-MicrostructureBoxes.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-MicrostructureBoxes.obj `if test -f 'MicrostructureBoxes.cpp'; then $(CYGPATH_W) 'MicrostructureBoxes.cpp'; else $(CYGPATH_W) '$(srcdir)/MicrostructureBoxes.cpp'; fi`

jemris-MicrostructureCrossingFiber.o: MicrostructureCrossingFiber.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-MicrostructureCrossingFiber.o -MD -MP -MF $(DEPDIR)/jemris-MicrostructureCrossingFiber.Tpo -c -o jemris-MicrostructureCrossingFiber.o `test -f 'MicrostructureCrossingFiber.cpp' || echo '$(srcdir)/'`MicrostructureCrossingFiber.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-MicrostructureCrossingFiber.Tpo $(DEPDIR)/jemris-MicrostructureCrossingFiber.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='MicrostructureCrossingFiber.cpp' object='jemris-MicrostructureCrossingFiber.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-MicrostructureCrossingFiber.o `test -f 'MicrostructureCrossingFiber.cpp' || echo '$(srcdir)/'`MicrostructureCrossingFiber.cpp

jemris-MicrostructureCrossingFiber.obj: MicrostructureCrossingFiber.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-MicrostructureCrossingFiber.obj -MD -MP -MF $(DEPDIR)/jemris-MicrostructureCrossingFiber.Tpo -c -o jemris-MicrostructureCrossingFiber.obj `if test -f 'MicrostructureCrossingFiber.cpp'; then $(CYGPATH_W) 'MicrostructureCrossingFiber.cpp'; else $(CYGPATH_W) '$(srcdir)/MicrostructureCrossingFiber.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-MicrostructureCrossingFiber.Tpo $(DEPDIR)/jemris-MicrostructureCrossingFiber.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='MicrostructureCrossingFiber.cpp' object='jemris-MicrostructureCrossingFiber.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-MicrostructureCrossingFiber.obj `if test -f 'MicrostructureCrossingFiber.cpp'; then $(CYGPATH_W) 'MicrostructureCrossingFiber.cpp'; else $(CYGPATH_W) '$(srcdir)/MicrostructureCrossingFiber.cpp'; fi`

jemris-MicrostructureKissingFiber.o: MicrostructureKissingFiber.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-MicrostructureKissingFiber.o -MD -MP -MF $(DEPDIR)/jemris-MicrostructureKissingFiber.Tpo -c -o jemris-MicrostructureKissingFiber.o `test -f 'MicrostructureKissingFiber.cpp' || echo '$(srcdir)/'`MicrostructureKissingFiber.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-MicrostructureKissingFiber.Tpo $(DEPDIR)/jemris-MicrostructureKissingFiber.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='MicrostructureKissingFiber.cpp' object='jemris-MicrostructureKissingFiber.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-MicrostructureKissingFiber.o `test -f 'MicrostructureKissingFiber.cpp' || echo '$(srcdir)/'`MicrostructureKissingFiber.cpp

jemris-MicrostructureKissingFiber.obj: MicrostructureKissingFiber.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-MicrostructureKissingFiber.obj -MD -MP -MF $(DEPDIR)/jemris-MicrostructureKissingFiber.Tpo -c -o jemris-MicrostructureKissingFiber.obj `if test -f 'MicrostructureKissingFiber.cpp'; then $(CYGPATH_W) 'MicrostructureKissingFiber.cpp'; else $(CYGPATH_W) '$(srcdir)/MicrostructureKissingFiber.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-MicrostructureKissingFiber.Tpo $(DEPDIR)/jemris-MicrostructureKissingFiber.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='MicrostructureKissingFiber.cpp' object='jemris-MicrostructureKissingFiber.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-MicrostructureKissingFiber.obj `if test -f 'MicrostructureKissingFiber.cpp'; then $(CYGPATH_W) 'MicrostructureKissingFiber.cpp'; else $(CYGPATH_W) '$(srcdir)/MicrostructureKissingFiber.cpp'; fi`

jemris-MicrostructureSingleFiber.o: MicrostructureSingleFiber.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-MicrostructureSingleFiber.o -MD -MP -MF $(DEPDIR)/jemris-MicrostructureSingleFiber.Tpo -c -o jemris-MicrostructureSingleFiber.o `test -f 'MicrostructureSingleFiber.cpp' || echo '$(srcdir)/'`MicrostructureSingleFiber.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-MicrostructureSingleFiber.Tpo $(DEPDIR)/jemris-MicrostructureSingleFiber.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='MicrostructureSingleFiber.cpp' object='jemris-MicrostructureSingleFiber.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-MicrostructureSingleFiber.o `test -f 'MicrostructureSingleFiber.cpp' || echo '$(srcdir)/'`MicrostructureSingleFiber.cpp

jemris-MicrostructureSingleFiber.obj: MicrostructureSingleFiber.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-MicrostructureSingleFiber.obj -MD -MP -MF $(DEPDIR)/jemris-MicrostructureSingleFiber.Tpo -c -o jemris-MicrostructureSingleFiber.obj `if test -f 'MicrostructureSingleFiber.cpp'; then $(CYGPATH_W) 'MicrostructureSingleFiber.cpp'; else $(CYGPATH_W) '$(srcdir)/MicrostructureSingleFiber.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-MicrostructureSingleFiber.Tpo $(DEPDIR)/jemris-MicrostructureSingleFiber.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='MicrostructureSingleFiber.cpp' object='jemris-MicrostructureSingleFiber.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-MicrostructureSingleFiber.obj `if test -f 'MicrostructureSingleFiber.cpp'; then $(CYGPATH_W) 'MicrostructureSingleFiber.cpp'; else $(CYGPATH_W) '$(srcdir)/MicrostructureSingleFiber.cpp'; fi`

jemris-Model.o: Model.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-Model.o -MD -MP -MF $(DEPDIR)/jemris-Model.Tpo -c -o jemris-Model.o `test -f 'Model.cpp' || echo '$(srcdir)/'`Model.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-Model.Tpo $(DEPDIR)/jemris-Model.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Model.cpp' object='jemris-Model.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-Model.o `test -f 'Model.cpp' || echo '$(srcdir)/'`Model.cpp

jemris-Model.obj: Model.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-Model.obj -MD -MP -MF $(DEPDIR)/jemris-Model.Tpo -c -o jemris-Model.obj `if test -f 'Model.cpp'; then $(CYGPATH_W) 'Model.cpp'; else $(CYGPATH_W) '$(srcdir)/Model.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-Model.Tpo $(DEPDIR)/jemris-Model.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Model.cpp' object='jemris-Model.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-Model.obj `if test -f 'Model.cpp'; then $(CYGPATH_W) 'Model.cpp'; else $(CYGPATH_W) '$(srcdir)/Model.cpp'; fi`

jemris-Module.o: Module.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-Module.o -MD -MP -MF $(DEPDIR)/jemris-Module.Tpo -c -o jemris-Module.o `test -f 'Module.cpp' || echo '$(srcdir)/'`Module.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-Module.Tpo $(DEPDIR)/jemris-Module.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Module.cpp' object='jemris-Module.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-Module.o `test -f 'Module.cpp' || echo '$(srcdir)/'`Module.cpp

jemris-Module.obj: Module.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-Module.obj -MD -MP -MF $(DEPDIR)/jemris-Module.Tpo -c -o jemris-Module.obj `if test -f 'Module.cpp'; then $(CYGPATH_W) 'Module.cpp'; else $(CYGPATH_W) '$(srcdir)/Module.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-Module.Tpo $(DEPDIR)/jemris-Module.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Module.cpp' object='jemris-Module.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-Module.obj `if test -f 'Module.cpp'; then $(CYGPATH_W) 'Module.cpp'; else $(CYGPATH_W) '$(srcdir)/Module.cpp'; fi`

jemris-ModulePrototypeFactory.o: ModulePrototypeFactory.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-ModulePrototypeFactory.o -MD -MP -MF $(DEPDIR)/jemris-ModulePrototypeFactory.Tpo -c -o jemris-ModulePrototypeFactory.o `test -f 'ModulePrototypeFactory.cpp' || echo '$(srcdir)/'`ModulePrototypeFactory.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-ModulePrototypeFactory.Tpo $(DEPDIR)/jemris-ModulePrototypeFactory.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ModulePrototypeFactory.cpp' object='jemris-ModulePrototypeFactory.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-ModulePrototypeFactory.o `test -f 'ModulePrototypeFactory.cpp' || echo '$(srcdir)/'`ModulePrototypeFactory.cpp

jemris-ModulePrototypeFactory.obj: ModulePrototypeFactory.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-ModulePrototypeFactory.obj -MD -MP -MF $(DEPDIR)/jemris-ModulePrototypeFactory.Tpo -c -o jemris-ModulePrototypeFactory.obj `if test -f 'ModulePrototypeFactory.cpp'; then $(CYGPATH_W) 'ModulePrototypeFactory.cpp'; else $(CYGPATH_W) '$(srcdir)/ModulePrototypeFactory.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-ModulePrototypeFactory.Tpo $(DEPDIR)/jemris-ModulePrototypeFactory.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ModulePrototypeFactory.cpp' object='jemris-ModulePrototypeFactory.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-ModulePrototypeFactory.obj `if test -f 'ModulePrototypeFactory.cpp'; then $(CYGPATH_W) 'ModulePrototypeFactory.cpp'; else $(CYGPATH_W) '$(srcdir)/ModulePrototypeFactory.cpp'; fi`

jemris-Parameters.o: Parameters.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-Parameters.o -MD -MP -MF $(DEPDIR)/jemris-Parameters.Tpo -c -o jemris-Parameters.o `test -f 'Parameters.cpp' || echo '$(srcdir)/'`Parameters.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-Parameters.Tpo $(DEPDIR)/jemris-Parameters.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Parameters.cpp' object='jemris-Parameters.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-Parameters.o `test -f 'Parameters.cpp' || echo '$(srcdir)/'`Parameters.cpp

jemris-Parameters.obj: Parameters.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-Parameters.obj -MD -MP -MF $(DEPDIR)/jemris-Parameters.Tpo -c -o jemris-Parameters.obj `if test -f 'Parameters.cpp'; then $(CYGPATH_W) 'Parameters.cpp'; else $(CYGPATH_W) '$(srcdir)/Parameters.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-Parameters.Tpo $(DEPDIR)/jemris-Parameters.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Parameters.cpp' object='jemris-Parameters.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-Parameters.obj `if test -f 'Parameters.cpp'; then $(CYGPATH_W) 'Parameters.cpp'; else $(CYGPATH_W) '$(srcdir)/Parameters.cpp'; fi`

jemris-Prototype.o: Prototype.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-Prototype.o -MD -MP -MF $(DEPDIR)/jemris-Prototype.Tpo -c -o jemris-Prototype.o `test -f 'Prototype.cpp' || echo '$(srcdir)/'`Prototype.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-Prototype.Tpo $(DEPDIR)/jemris-Prototype.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Prototype.cpp' object='jemris-Prototype.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-Prototype.o `test -f 'Prototype.cpp' || echo '$(srcdir)/'`Prototype.cpp

jemris-Prototype.obj: Prototype.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-Prototype.obj -MD -MP -MF $(DEPDIR)/jemris-Prototype.Tpo -c -o jemris-Prototype.obj `if test -f 'Prototype.cpp'; then $(CYGPATH_W) 'Prototype.cpp'; else $(CYGPATH_W) '$(srcdir)/Prototype.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-Prototype.Tpo $(DEPDIR)/jemris-Prototype.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Prototype.cpp' object='jemris-Prototype.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-Prototype.obj `if test -f 'Prototype.cpp'; then $(CYGPATH_W) 'Prototype.cpp'; else $(CYGPATH_W) '$(srcdir)/Prototype.cpp'; fi`

jemris-PrototypeFactory.o: PrototypeFactory.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-PrototypeFactory.o -MD -MP -MF $(DEPDIR)/jemris-PrototypeFactory.Tpo -c -o jemris-PrototypeFactory.o `test -f 'PrototypeFactory.cpp' || echo '$(srcdir)/'`PrototypeFactory.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-PrototypeFactory.Tpo $(DEPDIR)/jemris-PrototypeFactory.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='PrototypeFactory.cpp' object='jemris-PrototypeFactory.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-PrototypeFactory.o `test -f 'PrototypeFactory.cpp' || echo '$(srcdir)/'`PrototypeFactory.cpp

jemris-PrototypeFactory.obj: PrototypeFactory.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-PrototypeFactory.obj -MD -MP -MF $(DEPDIR)/jemris-PrototypeFactory.Tpo -c -o jemris-PrototypeFactory.obj `if test -f 'PrototypeFactory.cpp'; then $(CYGPATH_W) 'PrototypeFactory.cpp'; else $(CYGPATH_W) '$(srcdir)/PrototypeFactory.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-PrototypeFactory.Tpo $(DEPDIR)/jemris-PrototypeFactory.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='PrototypeFactory.cpp' object='jemris-PrototypeFactory.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-PrototypeFactory.obj `if test -f 'PrototypeFactory.cpp'; then $(CYGPATH_W) 'PrototypeFactory.cpp'; else $(CYGPATH_W) '$(srcdir)/PrototypeFactory.cpp'; fi`

jemris-Pulse.o: Pulse.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-Pulse.o -MD -MP -MF $(DEPDIR)/jemris-Pulse.Tpo -c -o jemris-Pulse.o `test -f 'Pulse.cpp' || echo '$(srcdir)/'`Pulse.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-Pulse.Tpo $(DEPDIR)/jemris-Pulse.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Pulse.cpp' object='jemris-Pulse.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-Pulse.o `test -f 'Pulse.cpp' || echo '$(srcdir)/'`Pulse.cpp

jemris-Pulse.obj: Pulse.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-Pulse.obj -MD -MP -MF $(DEPDIR)/jemris-Pulse.Tpo -c -o jemris-Pulse.obj `if test -f 'Pulse.cpp'; then $(CYGPATH_W) 'Pulse.cpp'; else $(CYGPATH_W) '$(srcdir)/Pulse.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-Pulse.Tpo $(DEPDIR)/jemris-Pulse.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Pulse.cpp' object='jemris-Pulse.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-Pulse.obj `if test -f 'Pulse.cpp'; then $(CYGPATH_W) 'Pulse.cpp'; else $(CYGPATH_W) '$(srcdir)/Pulse.cpp'; fi`

jemris-RFPulse.o: RFPulse.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-RFPulse.o -MD -MP -MF $(DEPDIR)/jemris-RFPulse.Tpo -c -o jemris-RFPulse.o `test -f 'RFPulse.cpp' || echo '$(srcdir)/'`RFPulse.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-RFPulse.Tpo $(DEPDIR)/jemris-RFPulse.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='RFPulse.cpp' object='jemris-RFPulse.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-RFPulse.o `test -f 'RFPulse.cpp' || echo '$(srcdir)/'`RFPulse.cpp

jemris-RFPulse.obj: RFPulse.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-RFPulse.obj -MD -MP -MF $(DEPDIR)/jemris-RFPulse.Tpo -c -o jemris-RFPulse.obj `if test -f 'RFPulse.cpp'; then $(CYGPATH_W) 'RFPulse.cpp'; else $(CYGPATH_W) '$(srcdir)/RFPulse.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-RFPulse.Tpo $(DEPDIR)/jemris-RFPulse.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='RFPulse.cpp' object='jemris-RFPulse.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-RFPulse.obj `if test -f 'RFPulse.cpp'; then $(CYGPATH_W) 'RFPulse.cpp'; else $(CYGPATH_W) '$(srcdir)/RFPulse.cpp'; fi`

jemris-RepIter.o: RepIter.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-RepIter.o -MD -MP -MF $(DEPDIR)/jemris-RepIter.Tpo -c -o jemris-RepIter.o `test -f 'RepIter.cpp' || echo '$(srcdir)/'`RepIter.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-RepIter.Tpo $(DEPDIR)/jemris-RepIter.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='RepIter.cpp' object='jemris-RepIter.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-RepIter.o `test -f 'RepIter.cpp' || echo '$(srcdir)/'`RepIter.cpp

jemris-RepIter.obj: RepIter.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-RepIter.obj -MD -MP -MF $(DEPDIR)/jemris-RepIter.Tpo -c -o jemris-RepIter.obj `if test -f 'RepIter.cpp'; then $(CYGPATH_W) 'RepIter.cpp'; else $(CYGPATH_W) '$(srcdir)/RepIter.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-RepIter.Tpo $(DEPDIR)/jemris-RepIter.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='RepIter.cpp' object='jemris-RepIter.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-RepIter.obj `if test -f 'RepIter.cpp'; then $(CYGPATH_W) 'RepIter.cpp'; else $(CYGPATH_W) '$(srcdir)/RepIter.cpp'; fi`

jemris-MultiPoolSample.o: MultiPoolSample.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-MultiPoolSample.o -MD -MP -MF $(DEPDIR)/jemris-MultiPoolSample.Tpo -c -o jemris-MultiPoolSample.o `test -f 'MultiPoolSample.cpp' || echo '$(srcdir)/'`MultiPoolSample.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-MultiPoolSample.Tpo $(DEPDIR)/jemris-MultiPoolSample.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='MultiPoolSample.cpp' object='jemris-MultiPoolSample.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-MultiPoolSample.o `test -f 'MultiPoolSample.cpp' || echo '$(srcdir)/'`MultiPoolSample.cpp

jemris-MultiPoolSample.obj: MultiPoolSample.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-MultiPoolSample.obj -MD -MP -MF $(DEPDIR)/jemris-MultiPoolSample.Tpo -c -o jemris-MultiPoolSample.obj `if test -f 'MultiPoolSample.cpp'; then $(CYGPATH_W) 'MultiPoolSample.cpp'; else $(CYGPATH_W) '$(srcdir)/MultiPoolSample.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-MultiPoolSample.Tpo $(DEPDIR)/jemris-MultiPoolSample.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='MultiPoolSample.cpp' object='jemris-MultiPoolSample.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-MultiPoolSample.obj `if test -f 'MultiPoolSample.cpp'; then $(CYGPATH_W) 'MultiPoolSample.cpp'; else $(CYGPATH_W) '$(srcdir)/MultiPoolSample.cpp'; fi`

jemris-Sample.o: Sample.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-Sample.o -MD -MP -MF $(DEPDIR)/jemris-Sample.Tpo -c -o jemris-Sample.o `test -f 'Sample.cpp' || echo '$(srcdir)/'`Sample.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-Sample.Tpo $(DEPDIR)/jemris-Sample.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Sample.cpp' object='jemris-Sample.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-Sample.o `test -f 'Sample.cpp' || echo '$(srcdir)/'`Sample.cpp

jemris-Sample.obj: Sample.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-Sample.obj -MD -MP -MF $(DEPDIR)/jemris-Sample.Tpo -c -o jemris-Sample.obj `if test -f 'Sample.cpp'; then $(CYGPATH_W) 'Sample.cpp'; else $(CYGPATH_W) '$(srcdir)/Sample.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-Sample.Tpo $(DEPDIR)/jemris-Sample.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Sample.cpp' object='jemris-Sample.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-Sample.obj `if test -f 'Sample.cpp'; then $(CYGPATH_W) 'Sample.cpp'; else $(CYGPATH_W) '$(srcdir)/Sample.cpp'; fi`

jemris-SampleReorderShuffle.o: SampleReorderShuffle.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-SampleReorderShuffle.o -MD -MP -MF $(DEPDIR)/jemris-SampleReorderShuffle.Tpo -c -o jemris-SampleReorderShuffle.o `test -f 'SampleReorderShuffle.cpp' || echo '$(srcdir)/'`SampleReorderShuffle.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-SampleReorderShuffle.Tpo $(DEPDIR)/jemris-SampleReorderShuffle.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SampleReorderShuffle.cpp' object='jemris-SampleReorderShuffle.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-SampleReorderShuffle.o `test -f 'SampleReorderShuffle.cpp' || echo '$(srcdir)/'`SampleReorderShuffle.cpp

jemris-SampleReorderShuffle.obj: SampleReorderShuffle.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-SampleReorderShuffle.obj -MD -MP -MF $(DEPDIR)/jemris-SampleReorderShuffle.Tpo -c -o jemris-SampleReorderShuffle.obj `if test -f 'SampleReorderShuffle.cpp'; then $(CYGPATH_W) 'SampleReorderShuffle.cpp'; else $(CYGPATH_W) '$(srcdir)/SampleReorderShuffle.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-SampleReorderShuffle.Tpo $(DEPDIR)/jemris-SampleReorderShuffle.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SampleReorderShuffle.cpp' object='jemris-SampleReorderShuffle.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-SampleReorderShuffle.obj `if test -f 'SampleReorderShuffle.cpp'; then $(CYGPATH_W) 'SampleReorderShuffle.cpp'; else $(CYGPATH_W) '$(srcdir)/SampleReorderShuffle.cpp'; fi`

jemris-SechRFPulse.o: SechRFPulse.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-SechRFPulse.o -MD -MP -MF $(DEPDIR)/jemris-SechRFPulse.Tpo -c -o jemris-SechRFPulse.o `test -f 'SechRFPulse.cpp' || echo '$(srcdir)/'`SechRFPulse.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-SechRFPulse.Tpo $(DEPDIR)/jemris-SechRFPulse.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SechRFPulse.cpp' object='jemris-SechRFPulse.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-SechRFPulse.o `test -f 'SechRFPulse.cpp' || echo '$(srcdir)/'`SechRFPulse.cpp

jemris-SechRFPulse.obj: SechRFPulse.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-SechRFPulse.obj -MD -MP -MF $(DEPDIR)/jemris-SechRFPulse.Tpo -c -o jemris-SechRFPulse.obj `if test -f 'SechRFPulse.cpp'; then $(CYGPATH_W) 'SechRFPulse.cpp'; else $(CYGPATH_W) '$(srcdir)/SechRFPulse.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-SechRFPulse.Tpo $(DEPDIR)/jemris-SechRFPulse.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SechRFPulse.cpp' object='jemris-SechRFPulse.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-SechRFPulse.obj `if test -f 'SechRFPulse.cpp'; then $(CYGPATH_W) 'SechRFPulse.cpp'; else $(CYGPATH_W) '$(srcdir)/SechRFPulse.cpp'; fi`

jemris-Sequence.o: Sequence.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-Sequence.o -MD -MP -MF $(DEPDIR)/jemris-Sequence.Tpo -c -o jemris-Sequence.o `test -f 'Sequence.cpp' || echo '$(srcdir)/'`Sequence.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-Sequence.Tpo $(DEPDIR)/jemris-Sequence.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Sequence.cpp' object='jemris-Sequence.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-Sequence.o `test -f 'Sequence.cpp' || echo '$(srcdir)/'`Sequence.cpp

jemris-Sequence.obj: Sequence.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-Sequence.obj -MD -MP -MF $(DEPDIR)/jemris-Sequence.Tpo -c -o jemris-Sequence.obj `if test -f 'Sequence.cpp'; then $(CYGPATH_W) 'Sequence.cpp'; else $(CYGPATH_W) '$(srcdir)/Sequence.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-Sequence.Tpo $(DEPDIR)/jemris-Sequence.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Sequence.cpp' object='jemris-Sequence.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-Sequence.obj `if test -f 'Sequence.cpp'; then $(CYGPATH_W) 'Sequence.cpp'; else $(CYGPATH_W) '$(srcdir)/Sequence.cpp'; fi`

jemris-SequenceTree.o: SequenceTree.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-SequenceTree.o -MD -MP -MF $(DEPDIR)/jemris-SequenceTree.Tpo -c -o jemris-SequenceTree.o `test -f 'SequenceTree.cpp' || echo '$(srcdir)/'`SequenceTree.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-SequenceTree.Tpo $(DEPDIR)/jemris-SequenceTree.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SequenceTree.cpp' object='jemris-SequenceTree.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-SequenceTree.o `test -f 'SequenceTree.cpp' || echo '$(srcdir)/'`SequenceTree.cpp

jemris-SequenceTree.obj: SequenceTree.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-SequenceTree.obj -MD -MP -MF $(DEPDIR)/jemris-SequenceTree.Tpo -c -o jemris-SequenceTree.obj `if test -f 'SequenceTree.cpp'; then $(CYGPATH_W) 'SequenceTree.cpp'; else $(CYGPATH_W) '$(srcdir)/SequenceTree.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-SequenceTree.Tpo $(DEPDIR)/jemris-SequenceTree.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SequenceTree.cpp' object='jemris-SequenceTree.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-SequenceTree.obj `if test -f 'SequenceTree.cpp'; then $(CYGPATH_W) 'SequenceTree.cpp'; else $(CYGPATH_W) '$(srcdir)/SequenceTree.cpp'; fi`

jemris-Signal.o: Signal.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-Signal.o -MD -MP -MF $(DEPDIR)/jemris-Signal.Tpo -c -o jemris-Signal.o `test -f 'Signal.cpp' || echo '$(srcdir)/'`Signal.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-Signal.Tpo $(DEPDIR)/jemris-Signal.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Signal.cpp' object='jemris-Signal.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-Signal.o `test -f 'Signal.cpp' || echo '$(srcdir)/'`Signal.cpp

jemris-Signal.obj: Signal.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-Signal.obj -MD -MP -MF $(DEPDIR)/jemris-Signal.Tpo -c -o jemris-Signal.obj `if test -f 'Signal.cpp'; then $(CYGPATH_W) 'Signal.cpp'; else $(CYGPATH_W) '$(srcdir)/Signal.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-Signal.Tpo $(DEPDIR)/jemris-Signal.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Signal.cpp' object='jemris-Signal.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-Signal.obj `if test -f 'Signal.cpp'; then $(CYGPATH_W) 'Signal.cpp'; else $(CYGPATH_W) '$(srcdir)/Signal.cpp'; fi`

jemris-SimpleIO.o: SimpleIO.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-SimpleIO.o -MD -MP -MF $(DEPDIR)/jemris-SimpleIO.Tpo -c -o jemris-SimpleIO.o `test -f 'SimpleIO.cpp' || echo '$(srcdir)/'`SimpleIO.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-SimpleIO.Tpo $(DEPDIR)/jemris-SimpleIO.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SimpleIO.cpp' object='jemris-SimpleIO.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-SimpleIO.o `test -f 'SimpleIO.cpp' || echo '$(srcdir)/'`SimpleIO.cpp

jemris-SimpleIO.obj: SimpleIO.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-SimpleIO.obj -MD -MP -MF $(DEPDIR)/jemris-SimpleIO.Tpo -c -o jemris-SimpleIO.obj `if test -f 'SimpleIO.cpp'; then $(CYGPATH_W) 'SimpleIO.cpp'; else $(CYGPATH_W) '$(srcdir)/SimpleIO.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-SimpleIO.Tpo $(DEPDIR)/jemris-SimpleIO.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SimpleIO.cpp' object='jemris-SimpleIO.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-SimpleIO.obj `if test -f 'SimpleIO.cpp'; then $(CYGPATH_W) 'SimpleIO.cpp'; else $(CYGPATH_W) '$(srcdir)/SimpleIO.cpp'; fi`

jemris-Simulator.o: Simulator.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-Simulator.o -MD -MP -MF $(DEPDIR)/jemris-Simulator.Tpo -c -o jemris-Simulator.o `test -f 'Simulator.cpp' || echo '$(srcdir)/'`Simulator.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-Simulator.Tpo $(DEPDIR)/jemris-Simulator.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Simulator.cpp' object='jemris-Simulator.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-Simulator.o `test -f 'Simulator.cpp' || echo '$(srcdir)/'`Simulator.cpp

jemris-Simulator.obj: Simulator.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-Simulator.obj -MD -MP -MF $(DEPDIR)/jemris-Simulator.Tpo -c -o jemris-Simulator.obj `if test -f 'Simulator.cpp'; then $(CYGPATH_W) 'Simulator.cpp'; else $(CYGPATH_W) '$(srcdir)/Simulator.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-Simulator.Tpo $(DEPDIR)/jemris-Simulator.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Simulator.cpp' object='jemris-Simulator.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-Simulator.obj `if test -f 'Simulator.cpp'; then $(CYGPATH_W) 'Simulator.cpp'; else $(CYGPATH_W) '$(srcdir)/Simulator.cpp'; fi`

jemris-SincRFPulse.o: SincRFPulse.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-SincRFPulse.o -MD -MP -MF $(DEPDIR)/jemris-SincRFPulse.Tpo -c -o jemris-SincRFPulse.o `test -f 'SincRFPulse.cpp' || echo '$(srcdir)/'`SincRFPulse.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-SincRFPulse.Tpo $(DEPDIR)/jemris-SincRFPulse.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SincRFPulse.cpp' object='jemris-SincRFPulse.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-SincRFPulse.o `test -f 'SincRFPulse.cpp' || echo '$(srcdir)/'`SincRFPulse.cpp

jemris-SincRFPulse.obj: SincRFPulse.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-SincRFPulse.obj -MD -MP -MF $(DEPDIR)/jemris-SincRFPulse.Tpo -c -o jemris-SincRFPulse.obj `if test -f 'SincRFPulse.cpp'; then $(CYGPATH_W) 'SincRFPulse.cpp'; else $(CYGPATH_W) '$(srcdir)/SincRFPulse.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-SincRFPulse.Tpo $(DEPDIR)/jemris-SincRFPulse.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SincRFPulse.cpp' object='jemris-SincRFPulse.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-SincRFPulse.obj `if test -f 'SincRFPulse.cpp'; then $(CYGPATH_W) 'SincRFPulse.cpp'; else $(CYGPATH_W) '$(srcdir)/SincRFPulse.cpp'; fi`

jemris-SpiralGradPulse.o: SpiralGradPulse.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-SpiralGradPulse.o -MD -MP -MF $(DEPDIR)/jemris-SpiralGradPulse.Tpo -c -o jemris-SpiralGradPulse.o `test -f 'SpiralGradPulse.cpp' || echo '$(srcdir)/'`SpiralGradPulse.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-SpiralGradPulse.Tpo $(DEPDIR)/jemris-SpiralGradPulse.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SpiralGradPulse.cpp' object='jemris-SpiralGradPulse.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-SpiralGradPulse.o `test -f 'SpiralGradPulse.cpp' || echo '$(srcdir)/'`SpiralGradPulse.cpp

jemris-SpiralGradPulse.obj: SpiralGradPulse.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-SpiralGradPulse.obj -MD -MP -MF $(DEPDIR)/jemris-SpiralGradPulse.Tpo -c -o jemris-SpiralGradPulse.obj `if test -f 'SpiralGradPulse.cpp'; then $(CYGPATH_W) 'SpiralGradPulse.cpp'; else $(CYGPATH_W) '$(srcdir)/SpiralGradPulse.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-SpiralGradPulse.Tpo $(DEPDIR)/jemris-SpiralGradPulse.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SpiralGradPulse.cpp' object='jemris-SpiralGradPulse.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-SpiralGradPulse.obj `if test -f 'SpiralGradPulse.cpp'; then $(CYGPATH_W) 'SpiralGradPulse.cpp'; else $(CYGPATH_W) '$(srcdir)/SpiralGradPulse.cpp'; fi`

jemris-StrX.o: StrX.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-StrX.o -MD -MP -MF $(DEPDIR)/jemris-StrX.Tpo -c -o jemris-StrX.o `test -f 'StrX.cpp' || echo '$(srcdir)/'`StrX.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-StrX.Tpo $(DEPDIR)/jemris-StrX.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='StrX.cpp' object='jemris-StrX.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-StrX.o `test -f 'StrX.cpp' || echo '$(srcdir)/'`StrX.cpp

jemris-StrX.obj: StrX.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-StrX.obj -MD -MP -MF $(DEPDIR)/jemris-StrX.Tpo -c -o jemris-StrX.obj `if test -f 'StrX.cpp'; then $(CYGPATH_W) 'StrX.cpp'; else $(CYGPATH_W) '$(srcdir)/StrX.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-StrX.Tpo $(DEPDIR)/jemris-StrX.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='StrX.cpp' object='jemris-StrX.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-StrX.obj `if test -f 'StrX.cpp'; then $(CYGPATH_W) 'StrX.cpp'; else $(CYGPATH_W) '$(srcdir)/StrX.cpp'; fi`

jemris-TPOI.o: TPOI.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-TPOI.o -MD -MP -MF $(DEPDIR)/jemris-TPOI.Tpo -c -o jemris-TPOI.o `test -f 'TPOI.cpp' || echo '$(srcdir)/'`TPOI.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-TPOI.Tpo $(DEPDIR)/jemris-TPOI.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='TPOI.cpp' object='jemris-TPOI.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-TPOI.o `test -f 'TPOI.cpp' || echo '$(srcdir)/'`TPOI.cpp

jemris-TPOI.obj: TPOI.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-TPOI.obj -MD -MP -MF $(DEPDIR)/jemris-TPOI.Tpo -c -o jemris-TPOI.obj `if test -f 'TPOI.cpp'; then $(CYGPATH_W) 'TPOI.cpp'; else $(CYGPATH_W) '$(srcdir)/TPOI.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-TPOI.Tpo $(DEPDIR)/jemris-TPOI.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='TPOI.cpp' object='jemris-TPOI.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-TPOI.obj `if test -f 'TPOI.cpp'; then $(CYGPATH_W) 'TPOI.cpp'; else $(CYGPATH_W) '$(srcdir)/TPOI.cpp'; fi`

jemris-Trajectory.o: Trajectory.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-Trajectory.o -MD -MP -MF $(DEPDIR)/jemris-Trajectory.Tpo -c -o jemris-Trajectory.o `test -f 'Trajectory.cpp' || echo '$(srcdir)/'`Trajectory.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-Trajectory.Tpo $(DEPDIR)/jemris-Trajectory.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Trajectory.cpp' object='jemris-Trajectory.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-Trajectory.o `test -f 'Trajectory.cpp' || echo '$(srcdir)/'`Trajectory.cpp

jemris-Trajectory.obj: Trajectory.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-Trajectory.obj -MD -MP -MF $(DEPDIR)/jemris-Trajectory.Tpo -c -o jemris-Trajectory.obj `if test -f 'Trajectory.cpp'; then $(CYGPATH_W) 'Trajectory.cpp'; else $(CYGPATH_W) '$(srcdir)/Trajectory.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-Trajectory.Tpo $(DEPDIR)/jemris-Trajectory.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Trajectory.cpp' object='jemris-Trajectory.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-Trajectory.obj `if test -f 'Trajectory.cpp'; then $(CYGPATH_W) 'Trajectory.cpp'; else $(CYGPATH_W) '$(srcdir)/Trajectory.cpp'; fi`

jemris-Trajectory1D.o: Trajectory1D.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-Trajectory1D.o -MD -MP -MF $(DEPDIR)/jemris-Trajectory1D.Tpo -c -o jemris-Trajectory1D.o `test -f 'Trajectory1D.cpp' || echo '$(srcdir)/'`Trajectory1D.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-Trajectory1D.Tpo $(DEPDIR)/jemris-Trajectory1D.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Trajectory1D.cpp' object='jemris-Trajectory1D.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-Trajectory1D.o `test -f 'Trajectory1D.cpp' || echo '$(srcdir)/'`Trajectory1D.cpp

jemris-Trajectory1D.obj: Trajectory1D.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-Trajectory1D.obj -MD -MP -MF $(DEPDIR)/jemris-Trajectory1D.Tpo -c -o jemris-Trajectory1D.obj `if test -f 'Trajectory1D.cpp'; then $(CYGPATH_W) 'Trajectory1D.cpp'; else $(CYGPATH_W) '$(srcdir)/Trajectory1D.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-Trajectory1D.Tpo $(DEPDIR)/jemris-Trajectory1D.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Trajectory1D.cpp' object='jemris-Trajectory1D.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-Trajectory1D.obj `if test -f 'Trajectory1D.cpp'; then $(CYGPATH_W) 'Trajectory1D.cpp'; else $(CYGPATH_W) '$(srcdir)/Trajectory1D.cpp'; fi`

jemris-TrajectoryDiffusion.o: TrajectoryDiffusion.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-TrajectoryDiffusion.o -MD -MP -MF $(DEPDIR)/jemris-TrajectoryDiffusion.Tpo -c -o jemris-TrajectoryDiffusion.o `test -f 'TrajectoryDiffusion.cpp' || echo '$(srcdir)/'`TrajectoryDiffusion.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-TrajectoryDiffusion.Tpo $(DEPDIR)/jemris-TrajectoryDiffusion.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='TrajectoryDiffusion.cpp' object='jemris-TrajectoryDiffusion.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-TrajectoryDiffusion.o `test -f 'TrajectoryDiffusion.cpp' || echo '$(srcdir)/'`TrajectoryDiffusion.cpp

jemris-TrajectoryDiffusion.obj: TrajectoryDiffusion.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-TrajectoryDiffusion.obj -MD -MP -MF $(DEPDIR)/jemris-TrajectoryDiffusion.Tpo -c -o jemris-TrajectoryDiffusion.obj `if test -f 'TrajectoryDiffusion.cpp'; then $(CYGPATH_W) 'TrajectoryDiffusion.cpp'; else $(CYGPATH_W) '$(srcdir)/TrajectoryDiffusion.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-TrajectoryDiffusion.Tpo $(DEPDIR)/jemris-TrajectoryDiffusion.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='TrajectoryDiffusion.cpp' object='jemris-TrajectoryDiffusion.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-TrajectoryDiffusion.obj `if test -f 'TrajectoryDiffusion.cpp'; then $(CYGPATH_W) 'TrajectoryDiffusion.cpp'; else $(CYGPATH_W) '$(srcdir)/TrajectoryDiffusion.cpp'; fi`

jemris-TrajectoryInterface.o: TrajectoryInterface.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-TrajectoryInterface.o -MD -MP -MF $(DEPDIR)/jemris-TrajectoryInterface.Tpo -c -o jemris-TrajectoryInterface.o `test -f 'TrajectoryInterface.cpp' || echo '$(srcdir)/'`TrajectoryInterface.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-TrajectoryInterface.Tpo $(DEPDIR)/jemris-TrajectoryInterface.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='TrajectoryInterface.cpp' object='jemris-TrajectoryInterface.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-TrajectoryInterface.o `test -f 'TrajectoryInterface.cpp' || echo '$(srcdir)/'`TrajectoryInterface.cpp

jemris-TrajectoryInterface.obj: TrajectoryInterface.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-TrajectoryInterface.obj -MD -MP -MF $(DEPDIR)/jemris-TrajectoryInterface.Tpo -c -o jemris-TrajectoryInterface.obj `if test -f 'TrajectoryInterface.cpp'; then $(CYGPATH_W) 'TrajectoryInterface.cpp'; else $(CYGPATH_W) '$(srcdir)/TrajectoryInterface.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-TrajectoryInterface.Tpo $(DEPDIR)/jemris-TrajectoryInterface.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='TrajectoryInterface.cpp' object='jemris-TrajectoryInterface.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-TrajectoryInterface.obj `if test -f 'TrajectoryInterface.cpp'; then $(CYGPATH_W) 'TrajectoryInterface.cpp'; else $(CYGPATH_W) '$(srcdir)/TrajectoryInterface.cpp'; fi`

jemris-TrajectoryMotion.o: TrajectoryMotion.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-TrajectoryMotion.o -MD -MP -MF $(DEPDIR)/jemris-TrajectoryMotion.Tpo -c -o jemris-TrajectoryMotion.o `test -f 'TrajectoryMotion.cpp' || echo '$(srcdir)/'`TrajectoryMotion.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-TrajectoryMotion.Tpo $(DEPDIR)/jemris-TrajectoryMotion.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='TrajectoryMotion.cpp' object='jemris-TrajectoryMotion.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-TrajectoryMotion.o `test -f 'TrajectoryMotion.cpp' || echo '$(srcdir)/'`TrajectoryMotion.cpp

jemris-TrajectoryMotion.obj: TrajectoryMotion.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-TrajectoryMotion.obj -MD -MP -MF $(DEPDIR)/jemris-TrajectoryMotion.Tpo -c -o jemris-TrajectoryMotion.obj `if test -f 'TrajectoryMotion.cpp'; then $(CYGPATH_W) 'TrajectoryMotion.cpp'; else $(CYGPATH_W) '$(srcdir)/TrajectoryMotion.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-TrajectoryMotion.Tpo $(DEPDIR)/jemris-TrajectoryMotion.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='TrajectoryMotion.cpp' object='jemris-TrajectoryMotion.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-TrajectoryMotion.obj `if test -f 'TrajectoryMotion.cpp'; then $(CYGPATH_W) 'TrajectoryMotion.cpp'; else $(CYGPATH_W) '$(srcdir)/TrajectoryMotion.cpp'; fi`

jemris-TrajectoryT2s.o: TrajectoryT2s.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-TrajectoryT2s.o -MD -MP -MF $(DEPDIR)/jemris-TrajectoryT2s.Tpo -c -o jemris-TrajectoryT2s.o `test -f 'TrajectoryT2s.cpp' || echo '$(srcdir)/'`TrajectoryT2s.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-TrajectoryT2s.Tpo $(DEPDIR)/jemris-TrajectoryT2s.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='TrajectoryT2s.cpp' object='jemris-TrajectoryT2s.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-TrajectoryT2s.o `test -f 'TrajectoryT2s.cpp' || echo '$(srcdir)/'`TrajectoryT2s.cpp

jemris-TrajectoryT2s.obj: TrajectoryT2s.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-TrajectoryT2s.obj -MD -MP -MF $(DEPDIR)/jemris-TrajectoryT2s.Tpo -c -o jemris-TrajectoryT2s.obj `if test -f 'TrajectoryT2s.cpp'; then $(CYGPATH_W) 'TrajectoryT2s.cpp'; else $(CYGPATH_W) '$(srcdir)/TrajectoryT2s.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-TrajectoryT2s.Tpo $(DEPDIR)/jemris-TrajectoryT2s.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='TrajectoryT2s.cpp' object='jemris-TrajectoryT2s.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-TrajectoryT2s.obj `if test -f 'TrajectoryT2s.cpp'; then $(CYGPATH_W) 'TrajectoryT2s.cpp'; else $(CYGPATH_W) '$(srcdir)/TrajectoryT2s.cpp'; fi`

jemris-TrapGradPulse.o: TrapGradPulse.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-TrapGradPulse.o -MD -MP -MF $(DEPDIR)/jemris-TrapGradPulse.Tpo -c -o jemris-TrapGradPulse.o `test -f 'TrapGradPulse.cpp' || echo '$(srcdir)/'`TrapGradPulse.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-TrapGradPulse.Tpo $(DEPDIR)/jemris-TrapGradPulse.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='TrapGradPulse.cpp' object='jemris-TrapGradPulse.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-TrapGradPulse.o `test -f 'TrapGradPulse.cpp' || echo '$(srcdir)/'`TrapGradPulse.cpp

jemris-TrapGradPulse.obj: TrapGradPulse.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-TrapGradPulse.obj -MD -MP -MF $(DEPDIR)/jemris-TrapGradPulse.Tpo -c -o jemris-TrapGradPulse.obj `if test -f 'TrapGradPulse.cpp'; then $(CYGPATH_W) 'TrapGradPulse.cpp'; else $(CYGPATH_W) '$(srcdir)/TrapGradPulse.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-TrapGradPulse.Tpo $(DEPDIR)/jemris-TrapGradPulse.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='TrapGradPulse.cpp' object='jemris-TrapGradPulse.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-TrapGradPulse.obj `if test -f 'TrapGradPulse.cpp'; then $(CYGPATH_W) 'TrapGradPulse.cpp'; else $(CYGPATH_W) '$(srcdir)/TrapGradPulse.cpp'; fi`

jemris-TriangleGradPulse.o: TriangleGradPulse.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-TriangleGradPulse.o -MD -MP -MF $(DEPDIR)/jemris-TriangleGradPulse.Tpo -c -o jemris-TriangleGradPulse.o `test -f 'TriangleGradPulse.cpp' || echo '$(srcdir)/'`TriangleGradPulse.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-TriangleGradPulse.Tpo $(DEPDIR)/jemris-TriangleGradPulse.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='TriangleGradPulse.cpp' object='jemris-TriangleGradPulse.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-TriangleGradPulse.o `test -f 'TriangleGradPulse.cpp' || echo '$(srcdir)/'`TriangleGradPulse.cpp

jemris-TriangleGradPulse.obj: TriangleGradPulse.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-TriangleGradPulse.obj -MD -MP -MF $(DEPDIR)/jemris-TriangleGradPulse.Tpo -c -o jemris-TriangleGradPulse.obj `if test -f 'TriangleGradPulse.cpp'; then $(CYGPATH_W) 'TriangleGradPulse.cpp'; else $(CYGPATH_W) '$(srcdir)/TriangleGradPulse.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-TriangleGradPulse.Tpo $(DEPDIR)/jemris-TriangleGradPulse.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='TriangleGradPulse.cpp' object='jemris-TriangleGradPulse.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-TriangleGradPulse.obj `if test -f 'TriangleGradPulse.cpp'; then $(CYGPATH_W) 'TriangleGradPulse.cpp'; else $(CYGPATH_W) '$(srcdir)/TriangleGradPulse.cpp'; fi`

jemris-TxRxPhase.o: TxRxPhase.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-TxRxPhase.o -MD -MP -MF $(DEPDIR)/jemris-TxRxPhase.Tpo -c -o jemris-TxRxPhase.o `test -f 'TxRxPhase.cpp' || echo '$(srcdir)/'`TxRxPhase.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-TxRxPhase.Tpo $(DEPDIR)/jemris-TxRxPhase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='TxRxPhase.cpp' object='jemris-TxRxPhase.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-TxRxPhase.o `test -f 'TxRxPhase.cpp' || echo '$(srcdir)/'`TxRxPhase.cpp

jemris-TxRxPhase.obj: TxRxPhase.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-TxRxPhase.obj -MD -MP -MF $(DEPDIR)/jemris-TxRxPhase.Tpo -c -o jemris-TxRxPhase.obj `if test -f 'TxRxPhase.cpp'; then $(CYGPATH_W) 'TxRxPhase.cpp'; else $(CYGPATH_W) '$(srcdir)/TxRxPhase.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-TxRxPhase.Tpo $(DEPDIR)/jemris-TxRxPhase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='TxRxPhase.cpp' object='jemris-TxRxPhase.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-TxRxPhase.obj `if test -f 'TxRxPhase.cpp'; then $(CYGPATH_W) 'TxRxPhase.cpp'; else $(CYGPATH_W) '$(srcdir)/TxRxPhase.cpp'; fi`

jemris-World.o: World.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-World.o -MD -MP -MF $(DEPDIR)/jemris-World.Tpo -c -o jemris-World.o `test -f 'World.cpp' || echo '$(srcdir)/'`World.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-World.Tpo $(DEPDIR)/jemris-World.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='World.cpp' object='jemris-World.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-World.o `test -f 'World.cpp' || echo '$(srcdir)/'`World.cpp

jemris-World.obj: World.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-World.obj -MD -MP -MF $(DEPDIR)/jemris-World.Tpo -c -o jemris-World.obj `if test -f 'World.cpp'; then $(CYGPATH_W) 'World.cpp'; else $(CYGPATH_W) '$(srcdir)/World.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-World.Tpo $(DEPDIR)/jemris-World.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='World.cpp' object='jemris-World.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-World.obj `if test -f 'World.cpp'; then $(CYGPATH_W) 'World.cpp'; else $(CYGPATH_W) '$(srcdir)/World.cpp'; fi`

jemris-XMLIO.o: XMLIO.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-XMLIO.o -MD -MP -MF $(DEPDIR)/jemris-XMLIO.Tpo -c -o jemris-XMLIO.o `test -f 'XMLIO.cpp' || echo '$(srcdir)/'`XMLIO.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-XMLIO.Tpo $(DEPDIR)/jemris-XMLIO.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='XMLIO.cpp' object='jemris-XMLIO.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-XMLIO.o `test -f 'XMLIO.cpp' || echo '$(srcdir)/'`XMLIO.cpp

jemris-XMLIO.obj: XMLIO.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-XMLIO.obj -MD -MP -MF $(DEPDIR)/jemris-XMLIO.Tpo -c -o jemris-XMLIO.obj `if test -f 'XMLIO.cpp'; then $(CYGPATH_W) 'XMLIO.cpp'; else $(CYGPATH_W) '$(srcdir)/XMLIO.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-XMLIO.Tpo $(DEPDIR)/jemris-XMLIO.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='XMLIO.cpp' object='jemris-XMLIO.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-XMLIO.obj `if test -f 'XMLIO.cpp'; then $(CYGPATH_W) 'XMLIO.cpp'; else $(CYGPATH_W) '$(srcdir)/XMLIO.cpp'; fi`

jemris-rng.o: rng.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-rng.o -MD -MP -MF $(DEPDIR)/jemris-rng.Tpo -c -o jemris-rng.o `test -f 'rng.cpp' || echo '$(srcdir)/'`rng.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-rng.Tpo $(DEPDIR)/jemris-rng.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='rng.cpp' object='jemris-rng.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-rng.o `test -f 'rng.cpp' || echo '$(srcdir)/'`rng.cpp

jemris-rng.obj: rng.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-rng.obj -MD -MP -MF $(DEPDIR)/jemris-rng.Tpo -c -o jemris-rng.obj `if test -f 'rng.cpp'; then $(CYGPATH_W) 'rng.cpp'; else $(CYGPATH_W) '$(srcdir)/rng.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-rng.Tpo $(DEPDIR)/jemris-rng.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='rng.cpp' object='jemris-rng.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-rng.obj `if test -f 'rng.cpp'; then $(CYGPATH_W) 'rng.cpp'; else $(CYGPATH_W) '$(srcdir)/rng.cpp'; fi`

jemris-jemris.o: jemris.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-jemris.o -MD -MP -MF $(DEPDIR)/jemris-jemris.Tpo -c -o jemris-jemris.o `test -f 'jemris.cpp' || echo '$(srcdir)/'`jemris.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-jemris.Tpo $(DEPDIR)/jemris-jemris.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='jemris.cpp' object='jemris-jemris.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-jemris.o `test -f 'jemris.cpp' || echo '$(srcdir)/'`jemris.cpp

jemris-jemris.obj: jemris.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -MT jemris-jemris.obj -MD -MP -MF $(DEPDIR)/jemris-jemris.Tpo -c -o jemris-jemris.obj `if test -f 'jemris.cpp'; then $(CYGPATH_W) 'jemris.cpp'; else $(CYGPATH_W) '$(srcdir)/jemris.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/jemris-jemris.Tpo $(DEPDIR)/jemris-jemris.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='jemris.cpp' object='jemris-jemris.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(jemris_CXXFLAGS) $(CXXFLAGS) -c -o jemris-jemris.obj `if test -f 'jemris.cpp'; then $(CYGPATH_W) 'jemris.cpp'; else $(CYGPATH_W) '$(srcdir)/jemris.cpp'; fi`

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES) config.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS) config.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES) config.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS) config.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

cscopelist:  $(HEADERS) $(SOURCES) $(LISP)
	list='$(SOURCES) $(HEADERS) $(LISP)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

check-TESTS: $(TESTS)
	@failed=0; all=0; xfail=0; xpass=0; skip=0; \
	srcdir=$(srcdir); export srcdir; \
	list=' $(TESTS) '; \
	$(am__tty_colors); \
	if test -n "$$list"; then \
	  for tst in $$list; do \
	    if test -f ./$$tst; then dir=./; \
	    elif test -f $$tst; then dir=; \
	    else dir="$(srcdir)/"; fi; \
	    if $(TESTS_ENVIRONMENT) $${dir}$$tst $(AM_TESTS_FD_REDIRECT); then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xpass=`expr $$xpass + 1`; \
		failed=`expr $$failed + 1`; \
		col=$$red; res=XPASS; \
	      ;; \
	      *) \
		col=$$grn; res=PASS; \
	      ;; \
	      esac; \
	    elif test $$? -ne 77; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xfail=`expr $$xfail + 1`; \
		col=$$lgn; res=XFAIL; \
	      ;; \
	      *) \
		failed=`expr $$failed + 1`; \
		col=$$red; res=FAIL; \
	      ;; \
	      esac; \
	    else \
	      skip=`expr $$skip + 1`; \
	      col=$$blu; res=SKIP; \
	    fi; \
	    echo "$${col}$$res$${std}: $$tst"; \
	  done; \
	  if test "$$all" -eq 1; then \
	    tests="test"; \
	    All=""; \
	  else \
	    tests="tests"; \
	    All="All "; \
	  fi; \
	  if test "$$failed" -eq 0; then \
	    if test "$$xfail" -eq 0; then \
	      banner="$$All$$all $$tests passed"; \
	    else \
	      if test "$$xfail" -eq 1; then failures=failure; else failures=failures; fi; \
	      banner="$$All$$all $$tests behaved as expected ($$xfail expected $$failures)"; \
	    fi; \
	  else \
	    if test "$$xpass" -eq 0; then \
	      banner="$$failed of $$all $$tests failed"; \
	    else \
	      if test "$$xpass" -eq 1; then passes=pass; else passes=passes; fi; \
	      banner="$$failed of $$all $$tests did not behave as expected ($$xpass unexpected $$passes)"; \
	    fi; \
	  fi; \
	  dashes="$$banner"; \
	  skipped=""; \
	  if test "$$skip" -ne 0; then \
	    if test "$$skip" -eq 1; then \
	      skipped="($$skip test was not run)"; \
	    else \
	      skipped="($$skip tests were not run)"; \
	    fi; \
	    test `echo "$$skipped" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$skipped"; \
	  fi; \
	  report=""; \
	  if test "$$failed" -ne 0 && test -n "$(PACKAGE_BUGREPORT)"; then \
	    report="Please report to $(PACKAGE_BUGREPORT)"; \
	    test `echo "$$report" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$report"; \
	  fi; \
	  dashes=`echo "$$dashes" | sed s/./=/g`; \
	  if test "$$failed" -eq 0; then \
	    col="$$grn"; \
	  else \
	    col="$$red"; \
	  fi; \
	  echo "$${col}$$dashes$${std}"; \
	  echo "$${col}$$banner$${std}"; \
	  test -z "$$skipped" || echo "$${col}$$skipped$${std}"; \
	  test -z "$$report" || echo "$${col}$$report$${std}"; \
	  echo "$${col}$$dashes$${std}"; \
	  test "$$failed" -eq 0; \
	else :; fi

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile $(PROGRAMS) config.h
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-hdr distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: all check-am install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-TESTS check-am clean \
	clean-binPROGRAMS clean-generic cscopelist ctags distclean \
	distclean-compile distclean-generic distclean-hdr \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-binPROGRAMS install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-binPROGRAMS


testmpi.sh: testmpi.sh.in Makefile
	$(do_subst) < testmpi.sh.in > testmpi.sh.tmp
	chmod +x testmpi.sh.tmp
	mv testmpi.sh.tmp testmpi.sh

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
