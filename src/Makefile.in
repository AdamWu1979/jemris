#
#  JEMRIS Copyright (C) 2007-2008  Tony Stöcker, Kaveh Vahedipour
#                                  Forschungszentrum Jülich, Germany
#
#  This program is free software; you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation; either version 2 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program; if not, write to the Free Software
#  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA

SHELL          = @SHELL@

prefix         = @prefix@

INSTALL        = @INSTALL@                                                                                                                                   
INSTALL_PROG   = @INSTALL_PROGRAM@
INSTALL_HEADER = @INSTALL_DATA@

MPICXX         = @MPICXX@
CXX            = @CXX@
CXXFLAGS       = @CXXFLAGS@
LDFLAGS        = @LDFLAGS@
LIBS           = @LIBS@
BUILD          = @build@
HOST           = @host@
PJEMRIS        = @PJEMRIS@


HOME := $(SHELL echo $HOME)
CP    = /bin/cp

CLUSTER_INSTALL_DIR = /srv/apps/prod/misc/bin

# Libraries source code directories
BUILD  = ./build/
DEBUG  = ./debug/
SRC    = ./framework/
MATLB  = ../matlab/

# 3rd party libraries 

# Compiler option
CCOPTS = -O3 -w $(W32_FLAGS) $(CXXFLAGS) -I$(SRC)

#Linker options
LDOPTS = $(W32_FLAGS) $(CXXFLAGS) $(LDFLAGS) $(LIBS)

OBS := $(patsubst $(SRC)%.cpp,$(BUILD)%.o,$(wildcard $(SRC)*.cpp))
INC := $(wildcard $(SRC)*.h)

#TO DO: all objects + main program
all   : jemris sanityck $(PJEMRIS)

# commands for model framework
$(BUILD)%.o       : $(SRC)%.cpp
	 $(CXX) $(CCOPTS) -c $< -o $@

#commands for main programs
sanityck : $(OBS) $(INC) sanityck.cpp
	$(CXX) sanityck.cpp $(OBS) $(CCOPTS) $(LDOPTS) -o sanityck
jemris   : $(OBS) $(INC) jemris.cpp
	$(CXX) jemris.cpp $(OBS) $(CCOPTS) $(LDOPTS) -o jemris
	test -e jemris && cp jemris $(MATLB)
pjemris  : $(OBS) $(INC) pjemris.cpp
	$(MPICXX) pjemris.cpp $(OBS) $(CCOPTS) $(LDOPTS) -o pjemris 
	test -e pjemris && cp pjemris $(MATLB)

#check
seqdiag_check :
	./sanityck xmpl 1
simulation_check :
	./sanityck xmpl 2
coil_check :
	./sanityck xmpl 3

mpi_check :
	@echo
	@echo "Test Case 4: testing parallel execution"
	@echo "======================================="
	mpirun -np 3 ./pjemris ../xmpl/approved/mpi_simu.xml > mpirun.out
	@cat mpirun.out
	@echo
	@if test `grep Finished mpirun.out` = Finished ;  \
	then echo Success;   \
	else echo Error; \
	fi
	@echo

check :  seqdiag_check simulation_check coil_check mpi_check 

#clean up
remove-objects :
	rm -f $(BUILD)*.o *.o 
remove-binaries :
	rm -f jemris pjemris sanityck
remove-conf :
	rm -f config.log config.status config.cache framework/config.h Makefile mod.xml

clean : remove-objects remove-binaries
dist-clean : remove-objects remove-binaries remove-conf

