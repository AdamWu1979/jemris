/**
***************************************************
* \page ug_command_line Running JEMRIS from the Command Line
The above introduced Matlab GUIs follow the same procedure: construct a valid XML file from the user input, then call the external JEMRIS
executables to compute the data, and finally read and visualise the result. Of course it is possible to directly run
the executables without running Matlab. For this, the XML configuration files might be directly manipulated to set up
the numerical experiments.

This section presents example XML files and explains how to start the simulation from the command line:
\n

\li \ref ug_command_line_XML

\li \ref ug_command_line_jemris

\li \ref ug_command_line_pjemris

\n
 <HR>

\section ug_command_line_XML Creating and editing XML configuration Files
There are three different types of XML files which configure a JEMRIS simulation:
\li \ref ug_seq_xml
\li \ref ug_trx_xml
\li \ref ug_sim_xml

\subsection ug_seq_xml The Sequence XML file
\code
<?xml version="1.0" encoding="utf-8"?>
<Parameters FOVx="256" FOVy="256" GradMaxAmpl="2" GradSlewRate="10" Name="P" Nx="64" Ny="64" TE="50" TR="100">
   <ConcatSequence Name="C1">
      <AtomicSequence Name="A1">
         <HARDRFPULSE Axis="RF" Duration="0.1" FlipAngle="90" Name="P1"/>
      </AtomicSequence>
      <AtomicSequence Name="A2">
         <TrapGradPulse Area="0.5*a1" Axis="GX" Name="P2" Observe="P4,Area"/>
         <TrapGradPulse Area="a1" Axis="GY" Name="P3" Observe="P,KMAXy"/>
      </AtomicSequence>
      <DelayAtomicSequence Delay="a1" DelayType="C2C" Name="D1" Observe="P,TE" StartSeq="A1" StopSeq="C2"/>
      <ConcatSequence Name="C2" Observe="P,Ny" Repetitions="a1">
         <AtomicSequence Name="A3">
            <TrapGradPulse Name="P4" Axis="GX" FlatTopArea="2*a1*(-1)^a2" FlatTopTime="1"
                           ADCs="a3" Observe="P,KMAXx/C2,Counter/P,Nx"/>
         </AtomicSequence>
         <AtomicSequence Name="A4">
            <TrapGradPulse Area="-a1" Axis="GY" Name="P5" Observe="P,DKy/C2,Counter/C2,Repetitions"/>
         </AtomicSequence>
      </ConcatSequence>
      <DelayAtomicSequence Delay="a1" DelayType="B2E" Name="D2" Observe="P,TR" StartSeq="A1"/>
   </ConcatSequence>
</Parameters>
\endcode
\n

\subsection ug_trx_xml The Coil Array XML file
\code

<?xml version="1.0" encoding="utf-8"?>
<CoilArray>
   <BIOTSAVARTLOOP Azimuth="0" Dim="3" Extent="260" Name="C1" Points="32" Polar="90" Radius="200" Scale="0.19" XPos="256" YPos="0" ZPos="0"/>
   <BIOTSAVARTLOOP Azimuth="45" Dim="3" Extent="260" Name="C2" Points="32" Polar="90" Radius="200" Scale="0.19" XPos="181.019" YPos="181.019" ZPos="0"/>
   <BIOTSAVARTLOOP Azimuth="90" Dim="3" Extent="260" Name="C3" Points="32" Polar="90" Radius="200" Scale="0.19" XPos="0" YPos="256" ZPos="0"/>
   <BIOTSAVARTLOOP Azimuth="135" Dim="3" Extent="260" Name="C4" Points="32" Polar="90" Radius="200" Scale="0.19" XPos="-181.019" YPos="181.019" ZPos="0"/>
   <BIOTSAVARTLOOP Azimuth="180" Dim="3" Extent="260" Name="C5" Points="32" Polar="90" Radius="200" Scale="0.19" XPos="-256" YPos="0" ZPos="0"/>
   <BIOTSAVARTLOOP Azimuth="225" Dim="3" Extent="260" Name="C6" Points="32" Polar="90" Radius="200" Scale="0.19" XPos="-181.019" YPos="-181.019" ZPos="0"/>
   <BIOTSAVARTLOOP Azimuth="270" Dim="3" Extent="260" Name="C7" Points="32" Polar="90" Radius="200" Scale="0.19" XPos="0" YPos="-256" ZPos="0"/>
   <BIOTSAVARTLOOP Azimuth="315" Dim="3" Extent="260" Name="C8" Points="32" Polar="90" Radius="200" Scale="0.19" XPos="181.019" YPos="-181.019" ZPos="0"/>
</CoilArray>
\endcode
\n

\subsection ug_sim_xml The Simulation XML file
\code
<?xml version="1.0" encoding="utf-8"?>
<simulate name="JEMRIS">
   <sequence name="epi" uri="/data/mr_cluster/tstoecker/example/epi.xml"/>
   <sample name="brain" uri="/data/mr_cluster/tstoecker/example/sample.bin"/>
   <RXcoilarray uri="/usr/local/share/jemris/matlab/uniform.xml"/>
   <TXcoilarray uri="/usr/local/share/jemris/matlab/uniform.xml"/>
   <parameter ConcomitantFields="0" EvolutionPrefix="evol" EvolutionSteps="0" RandomNoise="0"/>
   <model name="Bloch" type="CVODE"/>
</simulate>
\endcode
\n

 <HR>
\section ug_command_line_jemris Invoking the JEMRIS executable
Executing jemris on the command line without arguments shows the possible options:
\code
me@my_box:~$ jemris

JEMRIS 2.2 r1480M

jemris usage

       1. jemris <xml-file>
       The file could be either a a) Simulation, b) Sequence, or c) Coilarray file,
       so that a) the simultion is performed, b) a sequence diagram is written,
       or c) the sensitivity maps are dumped, respectively.

       2. jemris modlist
       Writes the file mod.xml containing a list of all available modules.
\endcode

\n
\n
For instance, running jemris with the EPI sequence XML file results in
\code
me@my_box:~$ jemris /usr/local/share/jemris/examples/epi.xml

JEMRIS 2.2 r1480M

dumping sensitivity maps ...
dump of sequence tree
                          TYPE              CLASS        NAME  duration      ADCs     TPOIs |  module specific
                          ----------------------------------------------------------------- |  ---------------
sequence-root-------->   CONCAT       CONCATSEQUENCE       C1   100.000     4096      4488  |  Repetitions = 1
  |_ child 1   ------>     ATOM       ATOMICSEQUENCE       A1     0.100        0         1  |
    |_ child 1   ---->    PULSE          HARDRFPULSE       P1     0.100        0         1  |  Axis = RF  , (Flipangle,Phase,Bandwidth,Channel) = (90,0,1e+16,0)
  |_ child 2   ------>     ATOM       ATOMICSEQUENCE       A2     0.654        0         5  |
    |_ child 1   ---->    PULSE        TRAPGRADPULSE       P2     0.654        0         3  |  Axis = GX  , Area = -0.908768
    |_ child 2   ---->    PULSE        TRAPGRADPULSE       P3     0.593        0         3  |  Axis = GY  , Area = 0.785398
  |_ child 3   ------>     ATOM  DELAYATOMICSEQUENCE       D1     4.072        0         1  |  DelayType = C2C  , StartSeq = A1 , StopSeq = C2
    |_ child 1   ---->    PULSE           EMPTYPULSE    eP_D1     4.072        0         1  |  Axis = none
  |_ child 4   ------>   CONCAT       CONCATSEQUENCE       C2    90.448     4096      4480  |  Repetitions = 64
    |_ child 1   ---->     ATOM       ATOMICSEQUENCE       A3     1.314       64        68  |
      |_ child 1   -->    PULSE        TRAPGRADPULSE       P4     1.314       64        68  |  Axis = GX  , Area = -1.81754 , FlatTop: (Area,time)= (-1.5708,1)
    |_ child 2   ---->     ATOM       ATOMICSEQUENCE       A4     0.099        0         2  |
      |_ child 1   -->    PULSE        TRAPGRADPULSE       P5     0.099        0         3  |  Axis = GY  , Area = -0.0245437
  |_ child 5   ------>     ATOM  DELAYATOMICSEQUENCE       D2     4.726        0         1  |  DelayType = B2E  , StartSeq = A1
    |_ child 1   ---->    PULSE           EMPTYPULSE    eP_D2     4.726        0         1  |  Axis = none

\endcode

Additionally, a binary file "seq.bin" is written which is read by the Matlab GUI to plot the sequence diagram.

\n
\n

 <HR>
\section ug_command_line_pjemris Invoking the parallel version of JEMRIS
\code


PARALLEL JEMRIS 2.2 r1470M

Model    : Bloch	  , solver = CVODE
Sample   : brain	  , spins  = 25841
TxArray  : /usr/local/share/jemris/matlab/uniform.xml
RxArray  : /usr/local/share/jemris/matlab/uniform.xml
Sequence : /data/mr_cluster/tstoecker/example/epi.xml

nmrpc40 -> Master Process: send MR sample (25841 spins) to 4 slave(s)

nmrpc40 -> slave  1:  received 10 spins for simulation ...
nmrpc40 -> slave  4:  received 40 spins for simulation ...
nmrpc40 -> slave  2:  received 20 spins for simulation ...
nmrpc40 -> slave  3:  received 30 spins for simulation ...
nmrpc40 -> slave  1:  received 1016 spins for simulation ...
nmrpc40 -> slave  2:  received 952 spins for simulation ...
nmrpc40 -> slave  4:  received 1014 spins for simulation ...
nmrpc40 -> slave  3:  received 728 spins for simulation ...
 [ .
   .
   . ]
nmrpc40 -> slave  1:  received 10 spins for simulation ...
nmrpc40 -> slave  2:  received 10 spins for simulation ...
nmrpc40 -> slave  4:  received 8 spins for simulation ...
nmrpc40 -> slave  3:  received 10 spins for simulation ...

MPI Process Wtime = 208.64 seconds
Finished
\endcode

*/
